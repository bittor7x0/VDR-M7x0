#!/bin/sh
###############################################################################
# This script to generate a alternative version of VDR-NG-FW from open7x0.org #
###############################################################################



###################
# Variables setup #
###################

# Path of script
BASE="${0%/*}"

# Version to generate
#   lite: Minimal install
#   pro:  Maximal install
vdr_version="pro"

# Local paths
vdr_fw="$BASE/VDR-NG-FW"
vdr_fw_orig="$vdr_fw.orig"
vdr_em_addons="$BASE/Addons"
vdr_em_files="$vdr_em_addons/Files"
vdr_em_patches="$vdr_em_addons/Patches"
vdr_em_plugins="$BASE/VDR-Plugins/Source+patch"

# SVN branch from assembla VDR-EM
svn_em="http://svn2.assembla.com/svn/VDR-M7x0/unstable"

# SVN branches from open7x0.org
svn_o7o="svn://open7x0.org/uclibc_build_env/branches/experimental"

# Path for temporal directory
tmp=`mktemp -d ./tmp-XXXXXXXXXX` || exit 1


#########################
# Update/Checkout files #
#########################

# Update/Checkout VDR-EM
if [[ -d "./.svn" ]]
then
	echo "Update VDR-EM"
	svn update
else
	rm -f "./make-fw"
	rm -rf "$tmp"
	echo "Checkout VDR-EM"
	svn checkout -q "$svn_em" "./"
	echo "Run this script again"
	exit 0
fi

# Checkout VDR-o7o
if [[ ! -d "$vdr_fw_orig" ]]
then
	echo "Checkout VDR-o7o original"
	svn checkout -q "$svn_o7o" "$vdr_fw_orig"
fi

############################
# Creating VDR-EM Firmware #
############################

# Copy original files to temporal dir
echo "Copying files to temporal dir"
cp -Trf "$vdr_fw_orig" "$tmp"
cp -Trf "$vdr_em_files/common" "$tmp"
cp -Trf "$vdr_em_files/$vdr_version" "$tmp"
cp -rf "$tmp/buildin/base-gambler/m740" "$tmp/buildin/base-$vdr_version"
cp -rf "$tmp/buildin/base-gambler/m750s" "$tmp/buildin/base-$vdr_version"

# Creating plugins dirs
echo "Creating plugins dirs"

[[ ! -d "$tmp/prg-fw-configs/vdr-m7x0-plugins/m740/channelscan/"   ]] && mkdir -p "$tmp/prg-fw-configs/vdr-m7x0-plugins/m740/channelscan/"
[[ ! -d "$tmp/prg-fw-configs/vdr-m7x0-plugins/m750s/channelscan/"  ]] && mkdir -p "$tmp/prg-fw-configs/vdr-m7x0-plugins/m750s/channelscan/"

for dp in `ls $vdr_em_plugins `; do
	dptarget=`echo $dp | cut -d'-' -f1`
	[[ ! -d "$tmp/prg-fw-configs/vdr-m7x0-plugins/common/$dptarget/" ]] && mkdir -p "$tmp/prg-fw-configs/vdr-m7x0-plugins/common/$dptarget/"
	[[ ! -d "$tmp/prg-fw-configs/vdr-m7x0-plugins/m740/$dptarget/"   ]] && mkdir -p "$tmp/prg-fw-configs/vdr-m7x0-plugins/m740/$dptarget/"
	[[ ! -d "$tmp/prg-fw-configs/vdr-m7x0-plugins/m750s/$dptarget/"  ]] && mkdir -p "$tmp/prg-fw-configs/vdr-m7x0-plugins/m750s/$dptarget/"
done;

# Patch firmware
echo "Patching Firmware"
$tmp/patches/patch-kernel.sh "$tmp" "$vdr_em_patches/common"
$tmp/patches/patch-kernel.sh "$tmp" "$vdr_em_patches/$vdr_version"

# Copy temporal dir to final dir
echo ""

if [[ -d "$vdr_fw" ]]
then
	echo "Cleaning VDR-o7o final"
	( cd $vdr_fw; make distclean)
#	rm -rf $vdr_fw/buildin/base
#	rm -rf $vdr_fw/buildin/base-gambler
#	rm -rf $vdr_fw/make-incs
#	rm -rf $vdr_fw/patches
#	rm -rf $vdr_fw/prg-fw-configs
#	rm -rf $vdr_fw/rootfs-file-lists
#	rm  -f $vdr_fw/m7x0_xtc_uclibc_Linux-i686/stagefiles/.bash*
#	rm  -f $vdr_fw/m7x0_xtc_uclibc_Linux-i686/stagefiles/.busybox*
#	rm  -f $vdr_fw/m7x0_xtc_uclibc_Linux-i686/stagefiles/.dropbear*
#	rm  -f $vdr_fw/m7x0_xtc_uclibc_Linux-i686/stagefiles/.spindown*
#	rm  -f $vdr_fw/m7x0_xtc_uclibc_Linux-i686/stagefiles/.vdr*
#	rm  -f $vdr_fw/m7x0_xtc_uclibc_Linux-i686/stagefiles/.web*
	rm  -f $vdr_fw/*.ofi
#	rm  -f $vdr_fw/*.wsw
#	rm  -f $vdr_fw/*.img
else
	mkdir -p "$vdr_fw"
fi

echo "Copying temporal dir to final dir"
cp -Trf "$tmp" "$vdr_fw"

# Clean temp dir
rm -rf "$tmp"
echo "Now you can edit config files in \"$vdr_fw\" and later run \"make\""
exit 0

