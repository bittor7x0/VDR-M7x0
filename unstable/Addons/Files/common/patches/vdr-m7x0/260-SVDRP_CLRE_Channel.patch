diff -Naur VDR-NG-orig/svdrp.c VDR-NG/svdrp.c
--- VDR-NG-orig/svdrp.c	2007-12-15 12:12:04.000000000 +0100
+++ VDR-NG/svdrp.c	2007-12-15 14:06:48.000000000 +0100
@@ -185,8 +185,9 @@
   "    Switch channel up, down or to the given channel number, name or id.\n"
   "    Without option (or after successfully switching to the channel)\n"
   "    it returns the current channel number and name.",
-  "CLRE\n"
-  "    Clear the entire EPG list.",
+  "CLRE [<number> | <name> | <id>]\n"
+  "    Clear the EPG list of the given channel number, name or id. \n"
+  "    Without option it clears the entire EPG list.",
   "CTRL <on|off>\n"
   "    Enable/Disable Input devices.",
   "DELC <number>\n"
@@ -537,8 +538,58 @@
 
 void cSVDRP::CmdCLRE(const char *Option)
 {
-  cSchedules::ClearAll();
-  Reply(250, "EPG data cleared");
+  if(*Option) {
+     tChannelID channelID = tChannelID::InvalidID;
+     
+    if (isnumber(Option)) {
+      int o = strtol(Option, NULL, 10);
+      if (o >= 1 && o <= Channels.MaxNumber()) {
+        channelID = Channels.GetByNumber(o)->GetChannelID();
+      }
+    } else {
+      channelID = tChannelID::FromString(Option);
+      if (channelID == tChannelID::InvalidID) {
+        for (cChannel *channel = Channels.First(); channel; channel = Channels.Next(channel)) {
+          if (!channel->GroupSep()) {
+            if (strcasecmp(channel->Name(), Option) == 0) {
+              channelID = channel->GetChannelID();
+              break;
+            }
+          }
+        }
+      }
+    }
+    if(!(channelID == tChannelID::InvalidID)) {
+      cSchedulesLock SchedulesLock(true, 1000);
+      cSchedules *s = (cSchedules *)cSchedules::Schedules(SchedulesLock);
+      
+      if(s) {
+        cSchedule* schedule = NULL;
+        channelID.ClrRid();
+        for (cSchedule *p = s->First(); p; p = s->Next(p)) {
+          if (p->ChannelID() == channelID)
+            schedule = p;
+        }
+        
+        if(schedule) {
+          schedule->Cleanup(INT_MAX);
+          
+          Reply(250, "EPG data from channel \"%s\" cleared", Option);
+        } else {
+          Reply(550, "No schedule found");
+          return;
+        }
+      } else {
+        Reply(451, "Can't get EPG data");
+      }
+    } else {
+      Reply(501, "Undefined channel \"%s\"", Option);
+    }
+  } else {
+    cSchedules::ClearAll();
+    Reply(250, "EPG data cleared");
+  }
+  
 }
 
 void cSVDRP::CmdCTRL(const char *Option)
