diff -Naur VDR-NG-orig/config.c VDR-NG/config.c
--- VDR-NG-orig/config.c	2008-10-09 20:21:57.000000000 +0200
+++ VDR-NG/config.c	2008-10-11 11:35:08.000000000 +0200
@@ -260,6 +260,8 @@
   RecordingsSortMode = 0;
   RecordingsSortDirsFirst = 0;
   CutterAutoDelete = 1;
+  CutterMaxBandwidth = 10;
+  CutterRelBandwidth = 75;
   HotStandby = 0;
   TvMode = 0;
   VCRMode = 0;
@@ -445,6 +447,8 @@
   else if (!strcasecmp(Name, "RecordingsSortMode"))  RecordingsSortMode = atoi(Value);
   else if (!strcasecmp(Name, "RecordingsSortDirsFirst")) RecordingsSortDirsFirst = atoi(Value);
   else if (!strcasecmp(Name, "CutterAutoDelete"))    CutterAutoDelete   = atoi(Value);
+  else if (!strcasecmp(Name, "CutterMaxBandwidth"))  CutterMaxBandwidth = atoi(Value);
+  else if (!strcasecmp(Name, "CutterRelBandwidth"))  CutterRelBandwidth = atoi(Value);
   else if (!strcasecmp(Name, "HotStandby"))          HotStandby         = atoi(Value);
   else if (!strcasecmp(Name, "TvMode"))              TvMode             = atoi(Value);
   else if (!strcasecmp(Name, "VCRMode"))             VCRMode            = atoi(Value);
@@ -537,6 +541,8 @@
   Store("RecordingsSortMode", RecordingsSortMode);
   Store("RecordingsSortDirsFirst", RecordingsSortDirsFirst);
   Store("CutterAutoDelete",   CutterAutoDelete);
+  Store("CutterMaxBandwidth", CutterMaxBandwidth);
+  Store("CutterRelBandwidth", CutterRelBandwidth);
   Store("HotStandby", 	      HotStandby);
   Store("TvMode", 	      TvMode);
   Store("VCRMode", 	      VCRMode);
diff -Naur VDR-NG-orig/config.h VDR-NG/config.h
--- VDR-NG-orig/config.h	2008-10-09 20:22:26.000000000 +0200
+++ VDR-NG/config.h	2008-10-11 11:35:41.000000000 +0200
@@ -273,6 +273,8 @@
   int RecordingsSortMode;
   int RecordingsSortDirsFirst;
   int CutterAutoDelete;
+  int CutterMaxBandwidth;
+  int CutterRelBandwidth;
   int JumpSeconds, JumpSecondsRepeat, JumpFramesRepeat;
   int AbortWhenPluginFails;
   int __EndData__;
diff -Naur VDR-NG-orig/cutter.c VDR-NG/cutter.c
--- VDR-NG-orig/cutter.c	2008-10-09 20:37:23.000000000 +0200
+++ VDR-NG/cutter.c	2008-10-11 11:54:03.000000000 +0200
@@ -13,8 +13,14 @@
 #include "thread.h"
 #include "videodir.h"
 
+
 // --- cCuttingThread --------------------------------------------------------
 
+#ifndef CUTTER_PRIORITY
+#  define CUTTER_PRIORITY sched_get_priority_min(SCHED_OTHER)
+#endif
+#define CUTTER_TIMESLICE   100   // ms
+
 class cCuttingThread : public cThread {
 private:
   const char *error;
@@ -60,6 +66,17 @@
 
 void cCuttingThread::Action(void)
 {
+  {
+    sched_param tmp;
+    tmp.sched_priority = CUTTER_PRIORITY;
+    if(!pthread_setschedparam(pthread_self(), SCHED_OTHER, &tmp))
+      printf("cCuttingThread::Action: cant set priority\n");
+  }
+
+  int bytes = 0;
+  int __attribute__((unused)) burst_size = MEGABYTE(Setup.CutterMaxBandwidth) * CUTTER_TIMESLICE / 1000; // max bytes/timeslice 
+  cTimeMs __attribute__((unused)) t;
+
 //M7X0 BEGIN AK
   SetPriority(19);
 //M7X0 END AK
@@ -173,6 +190,32 @@
               else
                  LastMark = true;
               }
+
+	   bytes += Length;
+	   if(bytes >= burst_size) {
+	     int elapsed = t.Elapsed();
+	     int sleep = 0;
+	     
+	     if (Setup.CutterRelBandwidth > 0 &&  Setup.CutterRelBandwidth < 100) {
+	       // stay under max. relative bandwidth
+
+	       sleep = (elapsed * 100 / Setup.CutterRelBandwidth) - elapsed;
+	       //if(sleep<=0 && elapsed<=2) sleep = 1; 
+	       //if(sleep) esyslog("cutter: relative bandwidth limit, sleep %d ms (chunk %dk / %dms)", sleep, burst_size/1024, CUTTER_TIMESLICE);
+	     }
+
+	     // stay under max. absolute bandwidth
+	     if(elapsed < CUTTER_TIMESLICE) {
+	       sleep = max(CUTTER_TIMESLICE - elapsed, sleep);
+	       //if(sleep) esyslog("cutter: absolute bandwidth limit, sleep %d ms (chunk %dk / %dms)", sleep, burst_size/1024, CUTTER_TIMESLICE);
+	     }
+
+	     if(sleep>0)
+	       cCondWait::SleepMs(sleep);
+	     t.Set();
+	     bytes = 0;
+	   }
+
            }
      Recordings.TouchUpdate();
      }
diff -Naur VDR-NG-orig/i18n.c VDR-NG/i18n.c
--- VDR-NG-orig/i18n.c	2008-10-09 20:24:37.000000000 +0200
+++ VDR-NG/i18n.c	2008-10-11 11:44:56.000000000 +0200
@@ -3017,6 +3017,50 @@
     "",// TODO
     "",// TODO
   },
+  { "Setup.Cutter$Maximum MB per second",
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "Máximo de MB por segundo",
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+  },
+  { "Setup.Cutter$Maximum bandwidth used in %",
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "Máximo ancho de banda usado en %",
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+  },
   { "Replay",
     "Wiedergabe",
     "Predvajanje",
diff -Naur VDR-NG-orig/menu.c VDR-NG/menu.c
--- VDR-NG-orig/menu.c	2008-10-11 10:24:17.000000000 +0200
+++ VDR-NG/menu.c	2008-10-11 11:45:07.000000000 +0200
@@ -3145,6 +3145,8 @@
 {
   SetSection(tr("Cutter"));
   Add(new cMenuEditBoolItem(tr("Setup.Cutter$Auto delete original record"),  &data.CutterAutoDelete));
+  Add(new cMenuEditIntItem( tr("Setup.Cutter$Maximum MB per second"),        &data.CutterMaxBandwidth, 1, 60));
+  Add(new cMenuEditIntItem( tr("Setup.Cutter$Maximum bandwidth used in %"),  &data.CutterRelBandwidth, 1, 100));
 }
 
 // --- cMenuSetupReplay ------------------------------------------------------
