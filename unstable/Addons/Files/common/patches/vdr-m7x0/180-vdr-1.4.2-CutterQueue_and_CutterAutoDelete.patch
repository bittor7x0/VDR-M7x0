diff -Naur VDR-NG-orig/config.c VDR-NG/config.c
--- VDR-NG-orig/config.c	2008-10-04 09:47:11.000000000 +0200
+++ VDR-NG/config.c	2008-10-09 20:21:57.000000000 +0200
@@ -259,6 +259,7 @@
   RecordingDirs = 1;
   RecordingsSortMode = 0;
   RecordingsSortDirsFirst = 0;
+  CutterAutoDelete = 1;
   HotStandby = 0;
   TvMode = 0;
   VCRMode = 0;
@@ -443,6 +444,7 @@
   else if (!strcasecmp(Name, "RecordingDirs"))       RecordingDirs      = atoi(Value);
   else if (!strcasecmp(Name, "RecordingsSortMode"))  RecordingsSortMode = atoi(Value);
   else if (!strcasecmp(Name, "RecordingsSortDirsFirst")) RecordingsSortDirsFirst = atoi(Value);
+  else if (!strcasecmp(Name, "CutterAutoDelete"))    CutterAutoDelete   = atoi(Value);
   else if (!strcasecmp(Name, "HotStandby"))          HotStandby         = atoi(Value);
   else if (!strcasecmp(Name, "TvMode"))              TvMode             = atoi(Value);
   else if (!strcasecmp(Name, "VCRMode"))             VCRMode            = atoi(Value);
@@ -534,6 +536,7 @@
   Store("RecordingDirs",      RecordingDirs);
   Store("RecordingsSortMode", RecordingsSortMode);
   Store("RecordingsSortDirsFirst", RecordingsSortDirsFirst);
+  Store("CutterAutoDelete",   CutterAutoDelete);
   Store("HotStandby", 	      HotStandby);
   Store("TvMode", 	      TvMode);
   Store("VCRMode", 	      VCRMode);
diff -Naur VDR-NG-orig/config.h VDR-NG/config.h
--- VDR-NG-orig/config.h	2008-10-04 09:47:11.000000000 +0200
+++ VDR-NG/config.h	2008-10-09 20:22:26.000000000 +0200
@@ -272,6 +272,7 @@
   int ShowRecDate, ShowRecTime, ShowRecLength, ShowProgressBar, MenuCmdPosition;
   int RecordingsSortMode;
   int RecordingsSortDirsFirst;
+  int CutterAutoDelete;
   int JumpSeconds, JumpSecondsRepeat, JumpFramesRepeat;
   int AbortWhenPluginFails;
   int __EndData__;
diff -Naur VDR-NG-orig/cutter.c VDR-NG/cutter.c
--- VDR-NG-orig/cutter.c	2008-10-09 20:12:40.000000000 +0200
+++ VDR-NG/cutter.c	2008-10-09 20:37:23.000000000 +0200
@@ -182,13 +182,54 @@
 
 // --- cCutter ---------------------------------------------------------------
 
+#define WAIT_BEFORE_NEXT_CUT   (10*1000)  // 10 seconds
+
+#define CUTTER_QUEUE
+
+class cStringListObject : public cListObject {
+  public:
+    cStringListObject(const char *s) { str = strdup(s); }
+    ~cStringListObject() { free(str); }
+
+    const char *Value() { return str; }
+    operator const char * () { return str; }
+
+  private:  
+    char *str;
+};
+
 char *cCutter::editedVersionName = NULL;
 cCuttingThread *cCutter::cuttingThread = NULL;
 bool cCutter::error = false;
 bool cCutter::ended = false;
+cMutex *cCutter::cutterLock = new cMutex();
+
+static uint64 /*cCutter::*/lastCuttingEndTime = 0;
+static cList<cStringListObject> /**cCutter::*/cutterQueue /*= new cList<cStringListObject>*/;
 
 bool cCutter::Start(const char *FileName)
 {
+  cMutexLock(cutterLock);
+
+#ifdef CUTTER_QUEUE
+  if(FileName) {
+    /* Add file to queue.
+     * If cutter is still active, next cutting will be started 
+     * when vdr.c:main calls cCutter::Active and previous cutting has 
+     * been stopped > 10 s before 
+     */
+    cutterQueue.Add(new cStringListObject(FileName));
+  }
+
+  if (cuttingThread) 
+    return true;
+
+  /* cut next file from queue */
+  if(!(cutterQueue.First()))
+    return false;
+  FileName = cutterQueue.First()->Value();
+#endif
+
   if (!cuttingThread) {
      error = false;
      ended = false;
@@ -200,6 +241,19 @@
      if (First) Recording.SetStartTime(Recording.start+((First->position/FRAMESPERSEC+30)/60)*60);
      
      const char *evn = Recording.PrefixFileName('%');
+
+     if(!(Recordings.GetByName(FileName))) {
+       // Should _not_ remove any cutted recordings 
+       // (original recording already deleted ?)
+       // so, just pop item from queue and return.
+       esyslog("can't cut non-existing recording %s", FileName);
+#ifdef CUTTER_QUEUE
+       cutterQueue.Del(cutterQueue.First());       
+       return true; // might be already queued recording
+#else
+       return false;
+#endif
+     }
      if (evn && RemoveVideoFile(evn) && MakeDirs(evn, true)) {
         // XXX this can be removed once RenameVideoFile() follows symlinks (see videodir.c)
         // remove a possible deleted recording with the same name to avoid symlink mixups:
@@ -225,6 +279,8 @@
 
 void cCutter::Stop(void)
 {
+  cMutexLock(cutterLock);
+
   bool Interrupted = cuttingThread && cuttingThread->Active();
   const char *Error = cuttingThread ? cuttingThread->Error() : NULL;
   delete cuttingThread;
@@ -236,11 +292,19 @@
         esyslog("ERROR: '%s' during editing process", Error);
      RemoveVideoFile(editedVersionName); //XXX what if this file is currently being replayed?
      Recordings.DelByName(editedVersionName);
+#ifdef CUTTER_QUEUE
+     cutterQueue.Del(cutterQueue.First());
+#endif
      }
+#ifdef CUTTER_QUEUE
+  lastCuttingEndTime = cTimeMs::Now();
+#endif
 }
 
 bool cCutter::Active(void)
 {
+  cMutexLock(cutterLock);
+
   if (cuttingThread) {
      if (cuttingThread->Active())
         return true;
@@ -251,12 +315,42 @@
      free(editedVersionName);
      editedVersionName = NULL;
      ended = true;
+     if(Setup.CutterAutoDelete){
+        /* Remove original (if cutting was successful) */
+        if(!error) {
+          cRecording *recording = Recordings.GetByName(*cutterQueue.First());
+          if (!recording) {
+             esyslog("ERROR: Can't found '%s' after editing process", cutterQueue.First()->Value());
+          } else {
+             if (recording->Delete()) {
+	        //Recordings.Del(recording);
+                //cReplayControl::ClearLastReplayed(ri->FileName());
+                Recordings.DelByName(recording->FileName());
+             } else {
+                esyslog("ERROR: Can't delete '%s' after editing process", cutterQueue.First()->Value());
+             }
+          }
+        }
+        lastCuttingEndTime = cTimeMs::Now();
      }
+#ifdef CUTTER_QUEUE
+     cutterQueue.Del(cutterQueue.First());
+#endif
+  }
+#ifdef CUTTER_QUEUE
+  if(!cuttingThread && cutterQueue.First()) {
+    /* start next cutting from queue*/
+    if(cTimeMs::Now() > lastCuttingEndTime + WAIT_BEFORE_NEXT_CUT)
+      Start(NULL);
+  }
+#endif
+
   return false;
 }
 
 bool cCutter::Error(void)
 {
+  cMutexLock(cutterLock);
   bool result = error;
   error = false;
   return result;
@@ -264,6 +358,7 @@
 
 bool cCutter::Ended(void)
 {
+  cMutexLock(cutterLock);
   bool result = ended;
   ended = false;
   return result;
diff -Naur VDR-NG-orig/cutter.h VDR-NG/cutter.h
--- VDR-NG-orig/cutter.h	2008-10-04 09:45:06.000000000 +0200
+++ VDR-NG/cutter.h	2008-10-09 20:13:25.000000000 +0200
@@ -11,6 +11,7 @@
 #define __CUTTER_H
 
 class cCuttingThread;
+class cMutex;
 
 class cCutter {
 private:
@@ -18,6 +19,7 @@
   static cCuttingThread *cuttingThread;
   static bool error;
   static bool ended;
+  static cMutex *cutterLock;
 public:
   static bool Start(const char *FileName);
   static void Stop(void);
diff -Naur VDR-NG-orig/i18n.c VDR-NG/i18n.c
--- VDR-NG-orig/i18n.c	2008-10-06 20:51:09.000000000 +0200
+++ VDR-NG/i18n.c	2008-10-09 20:24:37.000000000 +0200
@@ -2995,6 +2995,28 @@
     "",// TODO
     "",// TODO
   },
+  { "Setup.Cutter$Auto delete original record",
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "Auto borrar grabación original",
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+  },
   { "Replay",
     "Wiedergabe",
     "Predvajanje",
@@ -7157,6 +7179,28 @@
     "",// TODO
     "",// TODO
   },
+  { "Cutter already running - Add to cutting queue?",
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "Edición ya en proceso - ¿Añadir a cola de espera?",
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+    "",// TODO
+  },
   { NULL }
   };
 
diff -Naur VDR-NG-orig/menu.c VDR-NG/menu.c
--- VDR-NG-orig/menu.c	2008-10-09 19:57:24.000000000 +0200
+++ VDR-NG/menu.c	2008-10-11 10:24:17.000000000 +0200
@@ -3144,6 +3144,7 @@
 cMenuSetupCutter::cMenuSetupCutter(void)
 {
   SetSection(tr("Cutter"));
+  Add(new cMenuEditBoolItem(tr("Setup.Cutter$Auto delete original record"),  &data.CutterAutoDelete));
 }
 
 // --- cMenuSetupReplay ------------------------------------------------------
@@ -4745,7 +4746,11 @@
 {
   if (fileName) {
      Hide();
+#ifdef CUTTER_QUEUE
+     if (!cCutter::Active() || Interface->Confirm(tr("Cutter already running - Add to cutting queue?"))) {
+#else
      if (!cCutter::Active()) {
+#endif
         if (!marks.Count())
            Skins.Message(mtError, tr("No editing marks defined!"));
         else if (!cCutter::Start(fileName))
