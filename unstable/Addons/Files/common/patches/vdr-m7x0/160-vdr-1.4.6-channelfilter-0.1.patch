diff -Naur vdr-m7x0-orig/channels.h vdr-m7x0/channels.h
--- vdr-m7x0-orig/channels.h	2007-07-01 21:01:50.000000000 +0200
+++ vdr-m7x0/channels.h	2007-07-01 21:02:14.000000000 +0200
@@ -184,6 +184,8 @@
   int Tid(void) const { return tid; }
   int Sid(void) const { return sid; }
   int Rid(void) const { return rid; }
+  bool IsTV(void)    const { return (vpid > 0)  && (Apid(0)>0); }
+  bool IsRadio(void) const { return (vpid == 0) && (Apid(0)>0); }
   int Number(void) const { return number; }
   void SetNumber(int Number) { number = Number; }
   bool GroupSep(void) const { return groupSep; }
diff -Naur vdr-m7x0-orig/i18n.c vdr-m7x0/i18n.c
--- vdr-m7x0-orig/i18n.c	2007-07-01 21:01:50.000000000 +0200
+++ vdr-m7x0/i18n.c	2007-07-01 21:02:14.000000000 +0200
@@ -3861,6 +3861,72 @@
     "tilf. ny transp.",
     "pøidat nové transpondéry",
   },
+  { "All channels",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "Todos los canales",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+  },
+  { "Show only tv channels",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "Mostrar sólo canales de TV",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+  },
+  { "Show only radio channels",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "Mostrar sólo canales de radio",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+  },
   { "Setup.DVB$Audio languages",  // note the plural
     "Audio-Sprachen",
     "Jeziki za zvok",
diff -Naur vdr-m7x0-orig/menu.c vdr-m7x0/menu.c
--- vdr-m7x0-orig/menu.c	2007-07-01 21:01:50.000000000 +0200
+++ vdr-m7x0/menu.c	2007-07-01 21:03:02.000000000 +0200
@@ -376,7 +376,11 @@
             asprintf(&buffer, "%d\t%c %-30s", channel->Number(), ICON_TV_VERSCHL, channel->Name());
         }
      else
-        asprintf(&buffer, "%d\t%s", channel->Number(), channel->Name());
+        asprintf(&buffer, "%2d  %s%s  %s", channel->Number(), 
+	                                 channel->Vpid()>0 ? "t":" ", 
+					 (channel->Vpid()==0) && (channel->Apid(0) > 0) ? "r":" ",
+					 channel->Name()
+	);
      }
   else
      asprintf(&buffer, "---\t%s ----------------------------------------------------------------", channel->Name());
@@ -394,6 +398,8 @@
   void Setup(void);
   cChannel *GetChannel(int Index);
   void Propagate(void);
+  bool IsFiltered(void);
+  int onlyTV, onlyRadio;
 protected:
   eOSState Number(eKeys Key);
   eOSState Switch(void);
@@ -411,6 +417,7 @@
 :cOsdMenu(tr("Channels"), CHNUMWIDTH)
 {
   number = 0;
+  onlyTV = onlyRadio = 0;
   Setup();
   Channels.IncBeingEdited();
 }
@@ -426,17 +433,35 @@
   if (!currentChannel)
      currentChannel = Channels.GetByNumber(cDevice::CurrentChannel());
   cMenuChannelItem *currentItem = NULL;
+  cMenuChannelItem *lastUsedItem = NULL;
+  cMenuChannelItem *firstUsedItem = NULL;
   Clear();
+
   for (cChannel *channel = Channels.First(); channel; channel = Channels.Next(channel)) {
-      if ((!channel->GroupSep() || cMenuChannelItem::SortMode() == cMenuChannelItem::csmNumber && *channel->Name()) && ( channel == currentChannel || channel->Filtered() )) {
-         cMenuChannelItem *item = new cMenuChannelItem(channel);
-         Add(item);
-         if (channel == currentChannel)
-            currentItem = item;
-         }
+       if ((!channel->GroupSep() || cMenuChannelItem::SortMode() == cMenuChannelItem::csmNumber && ( channel == currentChannel || channel->Filtered() ))
+            && *channel->Name()  //Channel must have a name
+ 	    && (channel->GroupSep() || //Do not filter Groupseperators
+             	(  !(onlyTV      && !channel->IsTV()     ) 
+   		&& !(onlyRadio   && !channel->IsRadio()  )
+ 	    ))) {
+             cMenuChannelItem *item = new cMenuChannelItem(channel);
+             Add(item);
+            if (channel == currentChannel)
+         	currentItem = item;
+ 	    if (!channel->GroupSep()) {
+ 		lastUsedItem = item;
+ 		if( !firstUsedItem )
+ 		    firstUsedItem = item;
+ 	    }
+       } else {
+             if (channel == currentChannel)
+         	currentItem = lastUsedItem; // current channel is now invisible, so we use the nearest channel
       }
+  }
   if (cMenuChannelItem::SortMode() != cMenuChannelItem::csmNumber)
      Sort();
+  if (!currentItem) // happens, if after filtering the first line is a groupsep
+     currentItem = firstUsedItem;
   SetCurrent(currentItem);
   SetHelp(tr("Button$Edit"), tr("Button$New"), tr("Button$Delete"), tr("Button$Mark"));
   Display();
@@ -481,6 +506,11 @@
   return osContinue;
 }
 
+bool cMenuChannels::IsFiltered(void)
+{
+  return onlyTV || onlyRadio;
+}
+
 eOSState cMenuChannels::Switch(void)
 {
   if (HasSubMenu())
@@ -582,8 +612,27 @@
     default:
          if (state == osUnknown) {
             switch (Key) {
-              case k0 ... k9:
-                            return Number(Key);
+              case k0:
+	                    cMenuChannelItem::IncSortMode();
+	                    Setup();
+	                    break;
+              case k1:      // show all channels (default)
+	                    onlyTV = onlyRadio = 0;
+                            Setup();
+			    Skins.Message(mtStatus, tr("All channels"));
+                            break;
+              case k2:      // show only TV-channels with sound
+	                    onlyTV = !0;
+			    onlyRadio = 0;
+                            Setup();
+			    Skins.Message(mtStatus, tr("Show only tv channels"));
+                            break;
+              case k3:      // show only radio/broadcast
+	                    onlyTV = 0;
+	                    onlyRadio = !0;
+                            Setup();
+			    Skins.Message(mtStatus, tr("Show only radio channels"));
+                            break;
               case kOk:     return Switch();
               case kRed:    return Edit();
               case kGreen:  return New();
diff -Naur vdr-m7x0-orig/README.channelfilterpatch vdr-m7x0/README.channelfilterpatch
--- vdr-m7x0-orig/README.channelfilterpatch	1970-01-01 01:00:00.000000000 +0100
+++ vdr-m7x0/README.channelfilterpatch	2007-07-01 21:02:14.000000000 +0200
@@ -0,0 +1,27 @@
+This patch filters the channel list on demand. 
+A additional column of channel attributes is also added:
+ "t" = TV
+ "r" = radio
+
+Pressing the key "2" in the channel list hides all non TV channels.
+
+Pressing the key "3" hides all non radio channels.
+
+This works also in conjunction with the other filters.
+
+The filtering works also together with vdr's own sorting (key "0")
+
+Pressing "1" or closing and reopening the channel list
+resets any filtering.
+
+I tested the patch against vdr 1.3.31 and vdr 1.3.33. It should 
+also works with older 1.3.x-Versions.
+
+Install it as usual in the source directory of vdr
+  patch -p1 < vdr-1.3.xx-channelfilter-0.1.diff
+  make
+  make plugins
+(a header file was changed, so plugin needs to be rebuild too)
+
+Homepage www.u32.de/vdr.html#patches
+Reports Bugs to vdrpatch@u32.de
