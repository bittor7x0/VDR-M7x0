Index: epgsearch-0.9.24-orig/searchtimer_thread.c
===================================================================
--- epgsearch-0.9.24-orig/searchtimer_thread.c	(revisión: 177)
+++ epgsearch-0.9.24-orig/searchtimer_thread.c	(revisión: 178)
@@ -734,6 +734,8 @@
          if (searchName) free(searchName);
          continue;
       }
+      free(searchID);
+      free(searchName);
       LogFile.Log(3, "recording triggered from search timer %s", search->search);
       if (search->delAfterDays == 0) continue;
       time_t now = time(NULL);
Index: epgsearch-0.9.24-orig/epgsearchtools.c
===================================================================
--- epgsearch-0.9.24-orig/epgsearchtools.c	(revisión: 177)
+++ epgsearch-0.9.24-orig/epgsearchtools.c	(revisión: 178)
@@ -450,33 +450,44 @@
    char* descr = strdup(aux);
    char* beginaux = strstr(descr, "<epgsearch>");
    char* endaux = strstr(descr, "</epgsearch>");
-   if (!beginaux || !endaux) return NULL;
-   strn0cpy(descr, beginaux + strlen("<epgsearch>"), endaux - (beginaux + strlen("<epgsearch>")) + 1);
-   if (strcmp(name, "epgsearch") == 0) return descr; // full aux
+   if (!beginaux || !endaux) {
+      free(descr);
+      return NULL;
+      }
+   
+   beginaux +=  11;  // strlen("<epgsearch>");
+   endaux[0] = 0;
+   memmove(descr, beginaux, endaux - beginaux + 1);
+   
+   if (strcmp(name, "epgsearch") == 0) 
+      return descr; // full aux
 
+   int namelen = strlen(name);
    char catname[100] = "";
-   sprintf(catname, "<%s>", name);
+   catname[0] = '<';
+   memcpy(catname + 1, name, namelen);
+   catname[1 + namelen] = '>';
+   catname[2 + namelen] = 0;
 
-   char* cat = NULL;
-   int iPosCat = FindIgnoreCase(descr, catname);
-   if (iPosCat < 0) return NULL;
-   cat = descr + iPosCat;
-
+   char* cat = strcasestr(descr, catname);
+   if (!cat) {
+      free(descr);
+      return NULL;
+      }
+      
+   cat += namelen + 2;
    char* end = strstr(cat, "</");
-   int endpos = strlen(cat);
-   if (end)
-      endpos = end - cat;
-   else
-   {
+   if (!end) {
       free(descr);	
       return NULL;
-   }
-   cat[endpos] = 0;
-	
-   char* value = NULL;
-   msprintf(&value, "%s", cat + strlen(name)+2);
+      }
+   end[0] = 0;
+   
+   int catlen = end - cat + 1;
+   char* value = (char *) malloc(catlen);
+   memcpy(value, cat, catlen);
+   
    free(descr);
-   
    return value;
 }
 
