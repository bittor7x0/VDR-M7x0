<%!
/*
* 
* This source-code is licensed under GPL v2.
* See ../../LICENSE for details
* 
* (c) Christian Kelinski <k@kille.cx>
* Please checkout the README file!
* 
* Originally written for the open7x0.org VDR-FW project:
* www.open7x0.org
* 
* Modified for http://vdr-m7x0.foroactivo.com.es by:
* atinar <atinar1@hotmail.com>
* 
* You will need the KLONE web application development framework
* from www.koanlogic.com Version 2.
* 
*/

#include <stdio.h>
#include <string.h>
#include <sys/stat.h>
#include "conf.h"

#define REMOVE_VIDEO(path) ((strncmp(path,"/video/",7)==0)?path+7:path+1)

hostConf_t *isVideoPath(char *path) {
	int found = BT_FALSE;
	if (path){
		char * fullpath;
		int i;
		hostConf_t *host;
		for(i=0,host=webifConf.hosts;i<webifConf.hostsLength;i++,host++){
			if (host->video0[0]){
				crit_goto_if(asprintf(&fullpath,"%s/%s",host->video0,REMOVE_VIDEO(path))<0,outOfMemory);
				struct stat buf;
				if (stat(fullpath,&buf)!=0){
					warn("Error en stat");
				} else {
					found=boolean(S_ISDIR(buf.st_mode));
				}
				free(fullpath);
				if (found) return host;
			}
		}
	}
	return NULL;
outOfMemory:
	crit("Out of memory");
	exit(1);
}


#ifdef DEBUG
void dbg_404_kl1(){ dbg("404.kl1"); }
#endif

%><%

	#ifdef DEBUG
	dbg_404_kl1();
	#endif

	char * path=NULL;
	char * query=NULL;
	char * url;
	hostConf_t *host;
	if (parseRequestStr(request,&path,&query) && (host=isVideoPath(path))!=NULL ) {
		crit_goto_if(asprintf(&url,"/browse.kl1?path=%s&amp;hostId=%d",REMOVE_VIDEO(path),host->id)<0,outOfMemory);
	} else {
		warn("Unknown path %s",path);
		crit_goto_if((url=strdup("/index.kl1"))==NULL,outOfMemory);
	}
	response_redirect(response,url);
	free(url);
	free(path);
	free(query);
	goto end;
outOfMemory:
	crit("Out of memory");
end:
%>
