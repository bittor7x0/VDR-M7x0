<%!
/*
* 
* This source-code is licensed under GPL v2.
* See ../../LICENSE for details
* 
* (c) Christian Kelinski <k@kille.cx>
* Please checkout the README file!
* 
* Originally written for the open7x0.org VDR-FW project:
* www.open7x0.org
* 
* Modified for http://vdr-m7x0.foroactivo.com.es by:
* atinar <atinar1@hotmail.com>
* 
* You will need the KLONE web application development framework
* from www.koanlogic.com Version 2.
* 
*/

#include <klapp_conf.h>
#include <time.h>
#include <sys/types.h>
#include <sys/stat.h>

#include "i18n.h"
#include "misc.h"
#include "conf.h"

#ifdef DEBUG
void dbg_view_kl1(){ dbg("view.kl1"); }
#endif

%><%

	#ifdef DEBUG
	dbg_view_kl1();
	#endif

	context_t vctx;
	context_t *ctx=&vctx;
	initCtx(ctx,session,request,response,out,0);

	vars_t *args = request_get_args(request);
	ctx->currentAction=(vars_countn(args,"action")>0)?vars_get_value_i(args,"action"):PA_SHOW;
	int fileNum=(vars_countn(args,"fileNum")>0)?vars_get_value_i(args,"fileNum"):0;
	if (ctx->currentAction<PA_SHOW||ctx->currentAction>=PA_DOWNLOAD_ALL){
		//TODO error
		ctx->currentAction=PA_SHOW;
		fileNum=0;
	}
	if (fileNum<0||fileNum>=fileMappingLength){
		//TODO error
		ctx->currentAction=PA_SHOW;
		fileNum=0;
	}
	
	if (ctx->currentAction==PA_DOWNLOAD) {
		response_set_content_type(response, "application/octetstream");
		{
		char *cd;
		asprintf(&cd,"attachment; filename=\"%s.txt\"",fileMapping[fileNum].fileName);
		response_set_field(response,"Content-Disposition",cd);
		free(cd);
		}
		FILE *f = fopen(fileMapping[fileNum].fileName,"r");
		if (f) {
			char buffer[1024];
			while(fgets(buffer,1023,f)!=NULL) {
				ctx_printf(ctx,"%s",buffer);
			}
			fclose(f);
		}
	} else if (ctx->currentAction==PA_DOWNLOAD_ALL) {
		int i;
		char *tar_args[fileMappingLength+4];
		tar_args[0]="tar";
		tar_args[1]="-czf";
		tar_args[2]="/var/tmp/files.tar.gz";

		for (i=0;i<fileMappingLength;i++) {
			tar_args[3+i]=(char*)fileMapping[i].fileName;
		}
		tar_args[fileMappingLength+3]=NULL;
		pid_t pid=0;
		int status;
		pid=fork();
		if (pid==0) {
			execvp("/bin/tar", tar_args);
		}
		if (pid>0) {
			waitpid(pid,NULL,0);
			response_set_content_type(response, "application/gzip");
			response_set_field(response,"Content-Disposition","attachment; filename=\"files.tar.gz\"");
			FILE *f = fopen("/var/tmp/files.tar.gz","rb");
			if (f) {
				char buffer;
				while(!feof(f)) {
					buffer=fgetc(f);
					io_putc(out,buffer);
				}
				fclose(f);
			}
		}
	} else { 
		ctx->currentPage=PN_FILEVIEW;
		initHtmlPage(ctx,tr("fileView"),NULL);
		struct stat status;
		if ((stat(fileMapping[fileNum].fileName,&status))>=0) {
			const char *FileDownload=tr("fileDownload");
			ctx_printfn(ctx,"<div class=\"level2-div ui-widget\">\n",0,1);
			ctx_printfn(ctx,"<h2 class=\"level2-top ui-widget-header\">\n",0,1);
			ctx_printfn(ctx,"<ul class=\"controls\"><li class=\"control\">\n",0,1);
			ctx_printf0(ctx,
				"<a class=\"button-i ui-state-default\" href=\"view.kl1?action=%d&amp;fileNum=%d\" title=\"%s\">"
					"<span class=\"ui-icon ui-icon-disk\">%s</span>"
				"</a>\n",PA_DOWNLOAD,fileNum,FileDownload,FileDownload);
			ctx_printfn(ctx,"</li></ul>\n",-1,0);
			ctx_printf0(ctx,"%s\n",fileMapping[fileNum].fileName);
			ctx_printfn(ctx,"</h2>\n",-1,0);
			ctx_printfn(ctx,"<div class=\"level2 ui-widget-content\">\n",0,1);
			ctx_printfn(ctx,"<pre>\n",0,1);

			FILE *f = fopen(fileMapping[fileNum].fileName,"r");
			if (f) {
				char buffer[1024];
				char encoded[4096];
				
				while(fgets(buffer,1023,f)!=NULL) {
					u_htmlncpy(encoded,buffer,strlen(buffer),HTMLCPY_ENCODE);
					ctx_printf(ctx,encoded);
				}
				fclose(f);
			}
			ctx_printfn(ctx,"</pre>\n",-1,0);
			ctx_printfn(ctx,"</div>\n",-1,0); //level2
			ctx_printfn(ctx,"</div>\n",-1,0); //level2-div
		}
		finishHtmlPage(ctx);
	}
	freeCtx(ctx);
%>
