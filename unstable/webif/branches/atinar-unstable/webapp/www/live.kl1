<%!
/*
* 
* This source-code is licensed under GPL v2.
* See ../../LICENSE for details
* 
* (c) Hans-Peter Jochmann
*     Christian Kelinski <k@kille.cx>
* Please checkout the README file!
* 
* Originally written for the open7x0.org VDR-FW project:
* www.open7x0.org
* 
* Modified for http://vdr-m7x0.foroactivo.com.es by:
* atinar <atinar1@hotmail.com>
* 
* You will need the KLONE web application development framework
* from www.koanlogic.com Version 2.
* 
*/

#include <klapp_conf.h>
#include <time.h>

#include "i18n.h"
#include "misc.h"
#include "channels.h"
#include "svdrp_comm.h"

#ifdef DEBUG
static void dbg_live_kl1(void){
   dbg("live.kl1");
}
#endif

static void printHtmlHeadExtra(wcontext_t *wctx){
	wctx_printf0(wctx,"<link rel=\"stylesheet\" type=\"text/css\" href=\"%s/css/live.css\" media=\"screen\" />\n",webifConf.www);
	wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/jquery.selectboxes.js\"></script>\n",webifConf.www);
	wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/live.js\"></script>\n",webifConf.www);
	initJavascript(wctx);
	wctx_printf0(wctx,"$(function(){webif.livePageInit();});\n");
	finishJavascript(wctx);
}

%><%

	#ifdef DEBUG
	dbg_live_kl1();
	#endif

	wcontext_t vwctx;
	wcontext_t *wctx=&vwctx;
	if (initCtx(wctx,PN_LIVE_STREAM,session,request,response,out,0)){
		vars_t *args = request_get_args(request);
		int channelNum=vars_get_value_i(args,"channelNum");
		hostConf_t *host=(vars_countn(args,"hostId")>0) ? getHost(vars_get_value_i(args,"hostId")) : getFirstVdrHost();
		wctx->currentChannelNum=channelNum;
		initHtmlPage(wctx,tr("liveStream"),printHtmlHeadExtra);

		wctx_printfn(wctx,"<div class=\"level2-div ui-widget\">\n",0,1);
		wctx_printf0(wctx,"<h2 class=\"level2-top ui-widget-header\">%s</h2>\n",tr("liveStream"));
		wctx_printfn(wctx,"<div class=\"level2 ui-widget-content ui-helper-clearfix\">\n",0,1);

		if (host==NULL || !host->isVdr){
			wctx_printfn(wctx,"<div class=\"messageDialog\">\n",0,1);
			printMessage(wctx,"alert",tr("VDR not running!"),NULL,false);
		} else {
			channelList_t channels;
			const char *hostAddr=getHostHttpAddr(host,wctx);
			wctx_printfn(wctx,"<script type=\"text/javascript\">\n",0,1);
			wctx_printf0(wctx,"webif.state.url_base='http://%s';\n",hostAddr);
			wctx_printf0(wctx,"webif.state.channelNum='%d';\n",channelNum);
			wctx_printfn(wctx,"</script>\n",-1,0);
			
			getChannelList(host,&channels,SF_CH_NUMBER,SD_ASC);
			if ((channelNum<1) || (channelNum>channels.length)) {
				channel_t channel;
				if (getChannel(host,0,&channel)){
					channelNum=channel.channelNum;
				}
				freeChannel(&channel);
			}
			wctx_printfn(wctx,"<div id=\"control\">\n",0,1);
			const char *Play=tr("play");
			const char *Pause=tr("pause");
			const char *Fullscreen=tr("fullScreen");
			const char *Mute=tr("mute");
			const char *VolumeDown=tr("volumeDown");
			const char *VolumeUp=tr("volumeUp");

			{ //form
				wctx_printfn(wctx,"<form action=\"live.kl1\" method=\"post\" class=\"ui-helper-clearfix\">\n",0,1);
				wctx_printfn(wctx,"<ul class=\"controls\"><!--\n",0,1);
				wctx_printfn(wctx,"--><li class=\"control\">\n",0,1);
				printChannelListSelect(wctx,NULL,"channelNum",&channels,channelNum,NULL);
				wctx_printfn(wctx,"</li><!--\n",0,1);
				wctx_printfn(wctx,"--><li class=\"control\">\n",0,1);
				wctx_printf0(wctx,"<select id=\"audioTrack\" name=\"audioTrack\" size=\"1\" title=\"%s\"></select>\n",tr("audio.track"));
				wctx_printfn(wctx,"</li><!--\n",0,1);
				/* Produce error de desbordamiento de buffer en streamdevserver
				wctx_printf0(wctx,
					"--><li id=\"PlayOrPause\" class=\"control button-i ui-state-default\" >"
						"<span class=\"ui-icon ui-icon-pause\" title=\"%s\">%s</span>"
					"</li><!--\n",Pause,Pause);
				*/
				wctx_printf0(wctx,
					"--><li id=\"Fullscreen\" class=\"control button-i ui-state-default\" >"
						"<span class=\"ui-icon ui-icon-arrow-4-diag\" title=\"%s\">%s</span>"
					"</li><!--\n",Fullscreen,Fullscreen);
				wctx_printf0(wctx,
					"--><li id=\"Mute\" class=\"control button-i ui-state-default\" >"
						"<span class=\"ui-icon ui-icon-volume-off\" title=\"%s\">%s</span>"
					"</li><!--\n",Mute,Mute);
				wctx_printf0(wctx,
					"--><li id=\"VolumeDown\" class=\"control button-i ui-state-default\" >"
						"<span class=\"ui-icon ui-icon-volume-down\" title=\"%s\">%s</span>"
					"</li><!--\n",VolumeDown,VolumeDown);
				wctx_printf0(wctx,
					"--><li id=\"VolumeUp\" class=\"control button-i ui-state-default\" >"
						"<span class=\"ui-icon ui-icon-volume-up\" title=\"%s\">%s</span>"
					"</li><!--\n",VolumeUp,VolumeUp);
				wctx_printfn(wctx,"--></ul>\n",-1,0);
				wctx_printfn(wctx,"</form>\n",-1,0);
			}

			wctx_printf0(wctx,"<div id=\"info\"></div>\n");

			wctx_printfn(wctx,"</div>\n",-1,0); //control
				
				
			if ((channelNum>0) && (channelNum<=channels.length)) {
				const char *context =(channels.channel[channelNum-1].vpid>1) ? "/" : "/ES/";
				wctx_printfn(wctx,"<div id=\"vlcDiv\">\n",0,1);
				int p;
				for (p=0;p<2;p++){
					if (p==0) {
						wctx_printf0(wctx,"<!--[if !IE]><!-->\n");
						wctx_printfn(wctx,"<object id=\"vlc\" width=\"%d\" height=\"%d\" type=\"application/x-vlc-plugin\">\n"
							,0,1,webifConf.videoWidth,webifConf.videoHeight);
					}
					else {
						wctx_printf0(wctx,"<!--[if IE]>\n");
						wctx_printfn(wctx,"<object id=\"vlc\" width=\"%d\" height=\"%d\" type=\"application/x-vlc-plugin\" \n"
							,0,1,webifConf.videoWidth,webifConf.videoHeight);
						wctx_printf0(wctx,"classid=\"clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921\"\n");
						wctx_printf0(wctx,"codebase=\"http://downloads.videolan.org/pub/videolan/vlc/latest/win32/axvlc.cab\">\n");
					}
					wctx_printf0(wctx,"<param name=\"ShowDisplay\" value=\"true\" />\n");
					wctx_printf0(wctx,"<param name=\"AutoLoop\" value=\"false\" />\n");
					wctx_printf0(wctx,"<param name=\"AutoPlay\" value=\"false\" />\n");
					//wctx_printf0(wctx,"<param name=\"src\" value=\"playlistch.kl1?type=%d\" />\n",webifConf.playlistType);
					wctx_printfn(wctx,"</object>\n",-1,0);
					wctx_printf0(wctx,"%s<![endif]-->\n",(p==0)?"<!--":"");
				}
				wctx_printfn(wctx,"</div>\n",-1,0); //vlcDiv
			}
			freeChannelList(&channels);
		}
		wctx_printfn(wctx,"</div>\n",-1,0); //level2
		wctx_printfn(wctx,"</div>\n",-1,0); //level2-div

		finishHtmlPage(wctx);
		closeSvdrpAll();
	}
	freeCtx(wctx);
%>
