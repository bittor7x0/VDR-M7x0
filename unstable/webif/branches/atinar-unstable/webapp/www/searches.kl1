<%!
/*
* 
* This source-code is licensed under GPL v2.
* See ../../LICENSE for details
* 
* (c) Atinar <atinar1@hotmail.com>
* Please checkout the README file!
* 
* Originally written for http://vdr-m7x0.foroactivo.com.es
* 
* You will need the KLONE web application development framework
* from www.koanlogic.com Version 2.
* 
*/

#include <klapp_conf.h>
#include <time.h>
#include <locale.h>
#include <u/libu.h>

#include "channels.h"
#include "conf.h"
#include "epg.h"
#include "i18n.h"
#include "searches.h"
#include "svdrp_comm.h"
#include "timers.h"

#ifdef DEBUG
static void dbg_searches_kl1(void){
   dbg("searches.kl1");
}
#endif

static void printHtmlHeadExtra(wcontext_t *wctx){
	wctx_printf0(wctx,"<link rel=\"stylesheet\" type=\"text/css\" href=\"%s/css/searches.css\" media=\"screen\" />\n",webifConf.www);
	if (!wctx->isAjaxRequest){
		wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/jquery.form-2.36.js\"></script>\n",webifConf.www);
		wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/formHandler.js\"></script>\n",webifConf.www);
		wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/searches.js\"></script>\n",webifConf.www);
	}
	wctx_printfn(wctx,"<script type=\"text/javascript\">\n",0,1);
	if (!wctx->isAjaxRequest){
		wctx_printf0(wctx,"$(function(){webif.searchesPageInit();});\n");
	}
	wctx_printfn(wctx,"$.extend(webif.messages,{\n",0,1);
	wctx_printf0(wctx,"searchDeleteConfirm:'%s',\n",tr("search.delete.confirm"));
	wctx_printf0(wctx,"nothingToSearchFor:'%s',\n",tr("search.err.nothingToSearchFor"));
	wctx_printf0(wctx,"nothingToCompareWith:'%s'\n",tr("search.err.nothingToCompareWith"));
	wctx_printfn(wctx,"});\n",-1,0);
	wctx_printfn(wctx,"</script>\n",-1,0);
}

%><%

	#ifdef DEBUG
	dbg_searches_kl1();
	#endif

	wcontext_t vwctx;
	wcontext_t *wctx=&vwctx;
	if (initCtx(wctx,PN_SEARCHES,session,request,response,out,1024)){
		vars_t *args = request_get_args(request);
		int searchId=(vars_countn(args,"searchId")>0) ? vars_get_value_i(args,"searchId") : -1;
		bool mySearchStr;
		bool myOldSearchStr;
		char *searchStr=wctxGetRequestParam(wctx,args,"searchStr",&mySearchStr);
		char *oldSearchStr=wctxGetRequestParam(wctx,args,"oldSearchStr",&myOldSearchStr);
		const int hostId=vars_get_value_i(args,"hostId");
		const int oldHostId=vars_get_value_i(args,"oldHostId");
		hostConf_t *host=(vars_countn(args,"hostId")>0) ? getHost(hostId) : NULL;
		if (!host || !host->isVdr){
			host=getFirstVdrHost();
		}
		wctx->currentAction=(vars_countn(args,"a")>0) ? vars_get_value_i(args,"a") : PA_SUMMARY;
		wctx->sortBy=(vars_countn(args,"sort")>0) ? vars_get_value_i(args,"sort") : SF_NAME;
		wctx->sortDirection=(vars_countn(args,"direction")>0) ? vars_get_value_i(args,"direction") : SD_ASC;

		channelList_t vchannels;
		channelList_t *channels=&vchannels;
		initChannelList(channels);

		searchCatList_t vcats;
		searchCatList_t *cats=&vcats;
		initSearchCatList(cats);
		
		initHtmlPage(wctx,tr("searches"),printHtmlHeadExtra);
		if (!wctx->isAjaxRequest){
			wctx_printfn(wctx,"<div class=\"level2-div ui-widget\">\n",0,1);
			wctx_printf0(wctx,"<h2 class=\"level2-top ui-widget-header\">%s</h2>\n",tr("searches"));
			wctx_printfn(wctx,"<div class=\"level2 ui-widget-content ui-helper-clearfix\">\n",0,1);
		}
		if (wctx->currentAction==PA_DELETE) {
			if ( !wctx->isReload && (searchId>=0) && (oldSearchStr) ) {
				wctx_printfn(wctx,"<div class=\"messageDialog\">\n",0,1);
				if (!deleteSearch(wctx,host,searchId,oldSearchStr)){
					wctx->currentAction=PA_EDIT;
					if (mySearchStr){
						free(searchStr);
					}
					searchStr=oldSearchStr;
					mySearchStr=myOldSearchStr;
					myOldSearchStr=false;
				}
				wctx_printfn(wctx,"</div>\n",-1,0); //messageDialog
			}
			if (!wctx->isAjaxRequest){
				wctx->currentAction=PA_SUMMARY;
			}
		}
		if (wctx->currentAction==PA_ADD) {
			if (!wctx->isReload){
				if (channels->length==0 && host){
					getChannelList(host,channels,SF_NONE,SD_NONE);
				}
				if (cats->length==0){
					getSearchCatList(cats,host);
				}
				if (searchStr==NULL){
					search_t vsearch;
					if (initSearchFromArgs(&vsearch,args,channels,cats,wctx)){
						searchStr=makeSearchStr(&vsearch,channels);
						mySearchStr=true;
					}
					freeSearch(&vsearch);
				}
				wctx_printfn(wctx,"<div class=\"messageDialog\">\n",0,1);
				bool searchesChanged=false;
				if ( (searchId>=0) && (oldSearchStr) && (hostId==oldHostId) ) {
					searchesChanged=editSearch(wctx,host,searchId,oldSearchStr,searchStr);
				} else if (searchStr) {
					searchesChanged=addSearch(wctx,host,searchStr);
					if (searchesChanged){
						if ( (searchId>=0) && (oldSearchStr) && hostId!=oldHostId){
							hostConf_t *oldHost=getHost(oldHostId);
							deleteSearch(wctx,oldHost,searchId,oldSearchStr);
						}
					}
				}
				if (searchesChanged) {
					updateSearches(wctx,host);
				}
				wctx_printfn(wctx,"</div>\n",-1,0);
			}
			wctx->currentAction=PA_SUMMARY;
		}
		if (wctx->currentAction==PA_EDIT || wctx->currentAction==PA_SEARCH_CREATE_FROM_EVENT) {
			if (channels->length==0){
				getChannelList(host,channels,SF_NONE,SD_NONE);
			}
			if (cats->length==0){
				getSearchCatList(cats,host);
			}
			search_t vsearch;
			search_t *search=&vsearch;
			initSearch(search);
			if (wctx->currentAction==PA_EDIT){
				if (searchStr) {
					parseSearch(searchStr,search,channels);
					search->searchStr=searchStr;
				}
				search->id=searchId;
				search->hostId=hostId;
			} else {
				initSearchFromEvent(wctx,search,host,vars_get_value_i(args,"channelNum"),vars_get_value_i(args,"eventId"));	
			}
			printSearchForm(wctx,search,channels,cats,"level3");
			freeSearch(search);
		}
		if (wctx->currentAction==PA_SUMMARY) {
			if (channels->length==0 && host){
				getChannelList(host,channels,SF_NONE,SD_NONE);
			}
			if (channels->length>0) {
				searchList_t searches;
				getSearchList(&searches,channels,wctx->sortBy,wctx->sortDirection);
				bool printHost=boolean(webifConf.numVDRs>1);
				wctx_printfn(wctx,"<table id=\"%s\" class=\"level3-div\" summary=\"%s\">\n",0,1,AJAX_REPLACE_PREFIX("searches"),tr("searches"));
				wctx_printf0(wctx,"<col class=\"searchId number\"/>\n");
				if (printHost) wctx_printf0(wctx,"<col class=\"hostId number\"/>\n");
				wctx_printf0(wctx,"<col class=\"search\"/>\n");
				wctx_printf0(wctx,"<col class=\"directory\"/>\n");
				wctx_printf0(wctx,"<col class=\"hour\"/>\n");
				wctx_printf0(wctx,"<col class=\"hour\"/>\n");
				wctx_printfn(wctx,"<thead class=\"level3-top\">\n",0,1);
				wctx_printfn(wctx,"<tr>\n",0,1);
				printList1TH(wctx,"searches.kl1",SF_SE_NUMBER,"#");
				if (printHost){
					printList1TH(wctx,"searches.kl1",SF_HOST,"Host");
				}
				printList1TH(wctx,"searches.kl1",SF_NAME,tr("search"));
				printList1TH(wctx,"searches.kl1",SF_DIRECTORY,tr("directory"));
				printList1TH(wctx,"searches.kl1",SF_START,tr("start"));
				printList1TH(wctx,"searches.kl1",SF_START,tr("end"));
				wctx_printfn(wctx,"</tr>\n",-1,0);
				wctx_printfn(wctx,"</thead>\n",-1,0);

				wctx_printfn(wctx,"<tbody class=\"level3\">\n",0,1);
				const char *EditSearch=tr("search.edit");
				const search_t *search;
				struct tm sdate;
				int i,hour,min;
				for (i=0,search=searches.entry;i<searches.length;i++,search++) {
					wctx_printfn(wctx,"<tr%s>\n",0,1,classActive[isFlagSet(SFL_USE_AS_SEARCH_TIMER,search->flags)]);
					wctx_printf0(wctx,"<td class=\"number\">%d</td>\n",search->id);
					if (printHost) 
						wctx_printf0(wctx,"<td class=\"number\">%d</td>\n",search->hostId);
					wctx_printfn(wctx,"<td>\n",0,1);
					wctx_printf0(wctx,
						"<a class=\"searchEdit titleLink\" href=\"searches.kl1?a=%d&amp;searchId=%d&amp;searchStr=%s&amp;hostId=%d\" title=\"%s\">"
							"%s"
						"</a>"
						,PA_EDIT,search->id,CTX_URL_ENCODE(search->searchStr,-1,NULL),search->hostId,EditSearch,search->search);
					wctx_printfn(wctx,"</td>\n",-1,0);
					wctx_printf0(wctx,"<td>%s</td>\n",CTX_HTML_ENCODE(search->directory,-1));
					if (isFlagSet(SFL_USE_TIME,search->flags)){
						hour=search->startTime/100;
						min=search->startTime-hour*100;
						wctx_printf0(wctx,"<td class=\"hour\">%02d:%02d</td>\n",hour,min);
						hour=search->stopTime/100;
						min=search->stopTime-hour*100;
						wctx_printf0(wctx,"<td class=\"hour\">%02d:%02d</td>\n",hour,min);
					} else {
						wctx_printf0(wctx,"<td class=\"hour\">00:00</td>\n");
						wctx_printf0(wctx,"<td class=\"hour\">23:59</td>\n");
					}

					wctx_printfn(wctx,"</tr>\n",-1,0);
				}
				wctx_printfn(wctx,"</tbody>\n",-1,0);
				wctx_printfn(wctx,"</table>\n",-1,0);
				freeSearchList(&searches);
			} else {
				//TODO
			}
		}
		if (!wctx->isAjaxRequest){
			wctx_printfn(wctx,"</div>\n",-1,0); //level2
			wctx_printfn(wctx,"</div>\n",-1,0); //level2-div
		}
		finishHtmlPage(wctx);
		if (mySearchStr){
			free(searchStr);
			mySearchStr=false;
		}
		if (myOldSearchStr){
			free(oldSearchStr);
			myOldSearchStr=false;
		}
		freeChannelList(channels);
		freeSearchCatList(cats);
	}
	freeCtx(wctx);
	closeSvdrpAll();
%>
