<%!
/*
* 
* This source-code is licensed under GPL v2.
* See ../../LICENSE for details
* 
* (c) Christian Kelinski <k@kille.cx>
* Please checkout the README file!
* 
* Originally written for the open7x0.org VDR-FW project:
* www.open7x0.org
* 
* Modified for http://vdr-m7x0.foroactivo.com.es by:
* atinar <atinar1@hotmail.com>
* 
* You will need the KLONE web application development framework
* from www.koanlogic.com Version 2.
* 
*/

#include <klapp_conf.h>
#include <time.h>

time_t now;

#include "i18n.h"
#include "misc.h"
#include "channels.h"
#include "conf.h"
#include "svdrp_comm.h"

#ifdef DEBUG
static void dbg_channels_kl1(void) {
   dbg("channels.kl1");
}
#endif

static void printHtmlHeadExtra(context_t *ctx){
	ctx_printf0(ctx,"<link rel=\"stylesheet\" type=\"text/css\" href=\"%s/css/channels.css\" media=\"screen\" />\n",webifConf.www);
	ctx_printf0(ctx,"<script type=\"text/javascript\" src=\"%s/js/channels.js\"></script>\n",webifConf.www);
	initJavascript(ctx);
	ctx_printf0(ctx,"$(function(){webif.channelsPageInit();});\n");
	finishJavascript(ctx);
}

%><%

	#ifdef DEBUG
	dbg_channels_kl1();
	#endif

	channelList_t channels;
	channel_t *channel;
	int i=0;

	context_t vctx;
	context_t *ctx=&vctx;
	initCtx(ctx,session,request,response,out,0);
	vars_t *args = request_get_args(request);
	vctx.currentPage=PN_CHANNELS;
	vctx.sortBy=(vars_countn(args, "sort")>0) ? vars_get_value_i(args,"sort") : SF_CH_NUMBER;
	vctx.sortDirection=(vars_countn(args, "direction")>0) ? vars_get_value_i(args,"direction") : SD_ASC;

	initHtmlPage(ctx,tr("channels"),printHtmlHeadExtra);

	const char *PlaylistDownload=tr("channels.playlist.download");
	ctx_printfn(ctx,"<div class=\"level2-div ui-widget\">\n",0,1);
	ctx_printfn(ctx,"<h2 class=\"level2-top ui-widget-header\">\n",0,1);
	ctx_printfn(ctx,"<ul class=\"controls\"><li class=\"control\">\n",0,1);
	ctx_printf0(ctx,"<a class=\"button-i ui-state-default\" href=\"playlistch.kl1?type=%d\" title=\"%s\"><span class=\"ui-icon ui-icon-script\">%s</span></a>\n"
		,webifConf.playlistType,PlaylistDownload,PlaylistDownload);
	ctx_printfn(ctx,"</li></ul>\n",-1,0);
	ctx_printf0(ctx,"%s\n",tr("channels"));
	ctx_printfn(ctx,"</h2>\n",-1,0,tr("channels"));

	ctx_printfn(ctx,"<div class=\"level2 ui-widget-content ui-helper-clearfix\">\n",0,1);
	hostConf_t *host=getFirstVdrHost();
	if (!host) {
		printMessage(ctx,"alert",tr("errorNoVdrHost"),NULL, BT_FALSE);
	} else {
		getChannelList(host,&channels,vctx.sortBy,vctx.sortDirection);
		
		boolean_t isTv;
		const char *tableId[]={"tvChannels","radioChannels"};
		const char *ChannelDetails=tr("channelDetails");
		const char *Epg=tr("epg");
		const char *LiveStream=tr("liveStream");
		const char *Frequency=tr("frequency");
		const char *Parameters=tr("parameters");
		const char *Source=tr("source");
		const char *ConditionalAccessId=tr("conditionalAccessId");
		const char *ServiceId=tr("serviceId");
		const char *NetworkId=tr("networkId");
		const char *TransportStreamId=tr("transportStreamId");
		const char *RadioId=tr("radioId");
		int t;
		for (t=0;t<2;t++){
			const char *Caption=tr(tableId[t]);
			ctx_printfn(ctx,"<table id=\"%s\" class=\"level-3 channels\" summary=\"%s\">\n",0,1,tableId[t],Caption);
			ctx_printf0(ctx,"<caption>%s</caption>\n",Caption);
			ctx_printf0(ctx,"<col class=\"number\"/>\n");
			ctx_printf0(ctx,"<col class=\"channel\"/>\n");
			ctx_printf0(ctx,"<col class=\"mux\"/>\n");
			ctx_printfn(ctx,"<thead class=\"level3-top\">\n",0,1);
			ctx_printfn(ctx,"<tr>\n",0,1);
			printList1TH(ctx,"channels.kl1",SF_CH_NUMBER,"#");
			printList1TH(ctx,"channels.kl1",SF_NAME,tr("channel"));
			printList1TH(ctx,"channels.kl1",SF_MUX,tr("channelMux"));
			ctx_printfn(ctx,"</tr>\n",-1,0);
			ctx_printfn(ctx,"</thead>\n",-1,0);
			ctx_printfn(ctx,"<tbody class=\"level3\">\n",0,1);
			for (i=0,channel=channels.channel;i<channels.length;i++,channel++) {
				isTv=boolean(channel->vpid>1);
				if (t==0 && !isTv ||t==1 && isTv) continue;
				ctx_printfn(ctx,"<tr class=\"channel\">\n",0,1);
				ctx_printf0(ctx,"<td class=\"number\" >%d</td>\n",channel->channelNum);
				ctx_printf0(ctx,
					"<td class=\"channel\">"
						"<a class=\"channel titleLink\" href=\"#\">%s</a>"
					"</td>\n",channel->channelName);
				ctx_printf0(ctx,"<td class=\"mux\">%s</td>\n",channel->multiplexName);
				ctx_printfn(ctx,"</tr>\n",-1,0);
				ctx_printfn(ctx,"<tr class=\"channelInfo\">\n",0,1);
				ctx_printfn(ctx,"<td class=\"channelInfo\" colspan=\"3\">\n",0,1);
				printChannelControls(ctx,channel,Epg,LiveStream);
				ctx_printfn(ctx,"<table class=\"channelInfo\" summary=\"\">\n",0,1);
				ctx_printf0(ctx,"<caption>%s</caption>\n",ChannelDetails);
				ctx_printf0(ctx,"<tr><th>Id</th><td>%s</td></tr>\n",channel->channelId);
				ctx_printf0(ctx,"<tr><th>%s</th><td>%d</td></tr>\n",Frequency,channel->frequency);
				ctx_printf0(ctx,"<tr><th>%s</th><td>%s</td></tr>\n",Parameters,channel->parameter);
				ctx_printf0(ctx,"<tr><th>%s</th><td>%d</td></tr>\n",Source,channel->source);
				ctx_printf0(ctx,"<tr><th>%s</th><td>%d</td></tr>\n",ConditionalAccessId,channel->caid);
				ctx_printf0(ctx,"<tr><th>%s</th><td>%d</td></tr>\n",ServiceId,channel->sid);
				ctx_printf0(ctx,"<tr><th>%s</th><td>%d</td></tr>\n",NetworkId,channel->nid);
				ctx_printf0(ctx,"<tr><th>%s</th><td>%d</td></tr>\n",TransportStreamId,channel->tid);
				ctx_printf0(ctx,"<tr><th>%s</th><td>%d</td></tr>\n",RadioId,channel->rid);
				ctx_printfn(ctx,"</table>\n",-1,0);
				ctx_printfn(ctx,"</td>\n",-1,0); //channelInfo
				ctx_printfn(ctx,"</tr>\n",-1,0); //channelInfo
			}
			ctx_printfn(ctx,"</tbody>\n",-1,0);
			ctx_printfn(ctx,"</table>\n",-1,0);
		}
		freeChannelList(&channels);
	}
	ctx_printfn(ctx,"</div>\n",-1,0); //level2
	ctx_printfn(ctx,"</div>\n",-1,0); //level2-div

	finishHtmlPage(ctx);
	freeCtx(ctx);
	closeSvdrpAll();
%>
