<%!
/*
* 
* This source-code is licensed under GPL v2.
* See ../../LICENSE for details
* 
* (c) Christian Kelinski <k@kille.cx>
* Please checkout the README file!
* 
* Originally written for the open7x0.org VDR-FW project:
* www.open7x0.org
* 
* Modified for http://vdr-m7x0.foroactivo.com.es by:
* atinar <atinar1@hotmail.com>
* 
* You will need the KLONE web application development framework
* from www.koanlogic.com Version 2.
* 
*/

#include <klapp_conf.h>
#include <time.h>
#include <string.h>

#include "i18n.h"
#include "misc.h"
#include "conf.h"

static void printHtmlHeadExtra(context_t *ctx){
	if (!ctx->isAjaxRequest) {
		ctx_printf0(ctx,"<script type=\"text/javascript\" src=\"%s/js/settings.js\"></script>\n",webifConf.www);
		initJavascript(ctx);
		ctx_printf0(ctx,"$(function(){webif.settingsPageInit();});\n");
		finishJavascript(ctx);
	}
}


#ifdef DEBUG
static void dbg_settings_kl1(void){
   dbg("settings.kl1");
}
#endif

%><%

	#ifdef DEBUG
	dbg_settings_kl1();
	#endif
	
	vars_t *args = request_get_args(request);

	context_t vctx;
	context_t *ctx=&vctx;
	initCtx(ctx,session,request,response,out,1024);
	cfgFileId_t cfgFileId=(vars_countn(args,"cfgFileId")>0)?vars_get_value_i(args,"cfgFileId"):CF_WEBIFCONF;
	vctx.currentPage=PN_SETTINGS;
	vctx.currentAction = (vars_countn(args,"a")>0) ? vars_get_value_i(args,"a") : PA_NOACTION;
	cfgParamList_t params;
	cfgParam_t *param;
	const cfgParamConfig_t *paramConfig;
	initCfgParamList(&params);
	boolean_t allParamsAreValid=BT_TRUE;
	boolean_t showForm=boolean(!webifConf.configChangeDisabled);

	initHtmlPage(ctx,tr("setup"),printHtmlHeadExtra);

	ctx_printfn(ctx,"<div class=\"level2-div ui-widget\">\n",0,1);
	ctx_printf0(ctx,"<h2 class=\"level2-top ui-widget-header\">%s</h2>\n",tr("setup"));
	ctx_printfn(ctx,"<div class=\"level2 ui-widget-content\">\n",0,1);

	if (vctx.currentAction==PA_SAVE_CONFIG) {
		ctx_printfn(ctx,"<div class=\"messageDialog\">\n",0,1);
		if (webifConf.configChangeDisabled) {
			printMessage(ctx,"alert",tr("setup"),tr("cfgFileChangeDisabledErr"),BT_FALSE);
		} else {
			char argName[15];
			for(params.length=0;;params.length++){
				sprintf(argName,"paramName_%d",params.length);
				if (!vars_countn(args,argName)) break;
			}
			if (params.length==0){
				printMessage(ctx,"alert",tr("setup"),tr("cfgErrParamNameValueMismatch"),BT_FALSE);
			} else {
				params.entry=malloc(params.length*sizeof(cfgParam_t));
				int i;
				for (i=0,param=params.entry;i<params.length;i++,param++){
					initCfgParam(param);
					sprintf(argName,"paramName_%d",i);
					param->name=strdup(vars_get_value(args,argName));
					sprintf(argName,"paramValue_%d",i);
					const char *argValue=vars_get_value(args,argName);
					param->value=(argValue)?strdup(argValue):NULL;
					param->isValid=BT_TRUE;
					paramConfig=getCfgParamConfig(cfgFileId,param);
					if (paramConfig && paramConfig->validate!=NULL){
						paramConfig->validate(paramConfig,param);
					}
					if (!param->isValid){
						allParamsAreValid=BT_FALSE;
					}
				}
				if (cfgFileId==CF_WEBIFCONF){
					const char *logosFieldName="logos";
					vars_t *uploads=request_get_uploads(ctx->request);
					if (vars_countn(uploads,logosFieldName)>0){
						extractLogosFromRequest(ctx,logosFieldName);
					}
				}
			}
			if (allParamsAreValid) {
				boolean_t ok=writeConf(cfgFileId,&params);
				CTX_CHK_BUFFER(50);
				sprintf(ctx->buffer,tr((ok)?"cfgFileSaveOkFmt":"cfgFileSaveErrFmt"),cfgFile[cfgFileId].fileName);
				printMessage(ctx,(ok)?"message":"alert",tr("setup"),ctx->buffer,BT_FALSE);
				if (ok && (cfgFileId==CF_WEBIFCONF)){
					webifConf.alreadySet=BT_FALSE;
				}
				showForm=BT_TRUE;
			}
		}
		ctx_printfn(ctx,"</div>\n",-1,0);
	} else {
		boolean_t isNew;
		if (!readConf(cfgFileId,&params,&isNew)) {
			showForm=BT_FALSE;
			CTX_CHK_BUFFER(50);
			sprintf(ctx->buffer,tr("cfgFileDoesNotExistFmt"),cfgFileId,(cfgFileId>=0&&cfgFileId<cfgFileLength)?cfgFile[cfgFileId].fileName:"");
			ctx_printfn(ctx,"<div class=\"messageDialog\">\n",0,1);
			printMessage(ctx,"alert",tr("cfgFileDoesNotExistFmt"),ctx->buffer,BT_FALSE);
			ctx_printfn(ctx,"</div>\n",-1,0);
		} else {
			if (isNew){
				ctx_printfn(ctx,"<div class=\"messageDialog\">\n",0,1);
				printMessage(ctx,"message",cfgFile[cfgFileId].fileName,tr("cfgFileIsNew"),BT_FALSE);
				ctx_printfn(ctx,"</div>\n",-1,0);
			}
		}
	}
	if (showForm) {
		if (cfgFileId==CF_WEBIFCONF && webifConf.noLogos){
			ctx_printfn(ctx,"<div class=\"messageDialog\">\n",0,1);
			printMessage(ctx,"alert",tr("noLogosErrTitle"),tr("noLogosErrMessage"),BT_FALSE);
			ctx_printfn(ctx,"</div>\n",-1,0);
		}
		ctx_printfn(ctx,"<form action=\"settings.kl1\" method=\"post\"",0,1);
		if (cfgFileId==CF_WEBIFCONF){
			ctx_printf(ctx,"enctype=\"multipart/form-data\"");
		}
		ctx_printf(ctx,">\n");
		ctx_printf0(ctx,"<input type=\"hidden\" name=\"cfgFileId\" value=\"%d\" />\n",cfgFileId);
		ctx_printfn(ctx,"<table id=\"cfgFile\" class=\"list\" summary=\"%s\">\n",0,1,""); //TODO summary
		ctx_printf0(ctx,"<caption>%s</caption>\n",tr(cfgFile[cfgFileId].i18nKey));
		ctx_printfn(ctx,"<tbody>\n",0,1);
		int i;
		const char *paramI18n;
		for (i=0;i<params.length;i++) {
			const char * paramValue;
			param=params.entry+i;
			paramConfig=getCfgParamConfig(cfgFileId,param);
			//search by i18n key like "fileKey.paramName"
			CTX_CHK_BUFFER(strlen(cfgFile[cfgFileId].i18nKey)+strlen(param->name)+1);
			sprintf(ctx->buffer,"%s.%s",cfgFile[cfgFileId].i18nKey,param->name);
			paramI18n=tr(ctx->buffer);
			if (paramI18n==ctx->buffer) paramI18n=param->name;
			ctx_printfn(ctx,"<tr>\n",0,1);
			ctx_printf0(ctx,"<th>%s <input type=\"hidden\" name=\"paramName_%d\" value=\"%s\" /></th>\n",paramI18n,i,param->name);
			ctx_printfn(ctx,"<td>\n",0,1);
			if (param->isValid){
				paramValue=param->value;
			} else {
				ctx_printf0(ctx,"<p class=\"alert\">");
				ctx_printf(ctx,tr("cfgErrInvalidParamValueFmt"),param->value);
				ctx_printf(ctx,"</p>\n");
				if (paramConfig && paramConfig->defaultValue){
					paramValue=paramConfig->defaultValue;
				}
			};
			if (param->comment) {
				ctx_printfn(ctx,"<div class=\"boxRight\">\n",0,1);
				ctx_printfn(ctx,"<div class=\"infobox infoboxCssHover infoLeft\">\n",0,1);
				ctx_printf0(ctx,"<span class=\"ui-icon ui-icon-info\"></span>\n");
				ctx_printfn(ctx,"<div class=\"infoWrapper infoCssHover\">\n",0,1);
				ctx_printf0(ctx,"<div class=\"info\">%s</div>\n",CTX_HTML_ENCODE(param->comment,-1));
				ctx_printfn(ctx,"</div>\n",-1,0);
				ctx_printfn(ctx,"</div>\n",-1,0);
				ctx_printfn(ctx,"</div>\n",-1,0);
			}
			if (!paramConfig || !paramConfig->printInput || !paramConfig->printInput(ctx,paramConfig,NULL,NULL,i,paramValue)){
				ctx_printf0(ctx,"<input type=\"text\" name=\"paramValue_%d\" value=\"%s\" size=\"%d\" />\n"
					,i,CTX_HTML_ENCODE((paramValue)?param->value:"",-1),(paramValue)?strlen(paramValue)+5:40);
			}
			ctx_printfn(ctx,"</td>\n",-1,0);
			ctx_printfn(ctx,"</tr>\n",-1,0);
		}
		if (cfgFileId==CF_WEBIFCONF){
			ctx_printfn(ctx,"<tr>\n",0,1);
			ctx_printf0(ctx,"<th>%s</th>\n",tr("cfgWi.logos"));
			ctx_printfn(ctx,"<td>\n",0,1);
			ctx_printf0(ctx,"<input id=\"logos_file\" type=\"file\" name=\"logos\"/>");
			ctx_printfn(ctx,"</td>\n",-1,0);
			ctx_printfn(ctx,"</tr>\n",-1,0);
		}
		ctx_printfn(ctx,"<tr class=\"buttons\">\n",0,1);
		ctx_printfn(ctx,"<td colspan=\"2\">\n",0,1);
		ctx_printf0(ctx,
			"<button id=\"confirm\" class=\"confirm ui-state-default button-i-t\" name=\"a\" type=\"submit\" value=\"%d\" >"
				"<div><span class=\"ui-icon ui-icon-check\">&nbsp;</span>%s</div>"
			"</button>\n"
			,PA_SAVE_CONFIG,tr("saveConfig"));
		ctx_printfn(ctx,"</td>\n",-1,0);
		ctx_printfn(ctx,"</tr>\n",-1,0);
		ctx_printfn(ctx,"</tbody>\n",-1,0);
		ctx_printfn(ctx,"</table>\n",-1,0);
		ctx_printfn(ctx,"</form>\n",-1,0);
	}
	ctx_printfn(ctx,"</div>\n",-1,0); //level2
	ctx_printfn(ctx,"</div>\n",-1,0); //level2-div
	finishHtmlPage(ctx);
	freeCfgParamList(&params);
	freeCtx(ctx);
%>
