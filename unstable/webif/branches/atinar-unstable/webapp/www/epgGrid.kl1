<%!
/*
* 
* This source-code is licensed under GPL v2.
* See ../../LICENSE for details
* 
* Originally written for http://vdr-m7x0.foroactivo.com.es by:
* atinar <atinar1@hotmail.com>
* 
* You will need the KLONE web application development framework
* from www.koanlogic.com Version 2.
* 
*/

#include <klapp_conf.h>
#include <time.h>

time_t now;

#include "i18n.h"
#include "misc.h"
#include "channels.h"
#include "epg.h"
#include "conf.h"
#include "svdrp_comm.h"
#include "timers.h"

#ifdef DEBUG
static void dbg_epgGrid_kl1(void) {
   dbg("epgGrid.kl1");
}
#endif

static void printHtmlHeadExtra(wcontext_t *wctx){
   int i;
	if (!wctx->isAjaxRequest){
		wctx_printf0(wctx,"<link rel=\"stylesheet\" type=\"text/css\" href=\"%s/css/jquery.timepickr.css\" media=\"screen\" />\n",webifConf.www);
		wctx_printf0(wctx,"<link rel=\"stylesheet\" type=\"text/css\" href=\"%s/css/epgGrid.css\" media=\"screen\" />\n",webifConf.www);
		wctx_printfn(wctx,"<style type=\"text/css\">",0,1);
		wctx_printf0(wctx,"#grid-div #channels div.logo {width:%dpx;}",CHAN_LOGO_W);
		wctx_printf0(wctx,"#grid-div #channels div.logo img {width:%dpx;height:%dpx;}",webifConf.channelLogoWidth,webifConf.channelLogoWidth);
		wctx_printf0(wctx,"#grid-div .channel .channelEvents {min-height:%dpx;}",webifConf.channelLogoWidth);
		wctx_printfn(wctx,"</style>",-1,0);

		wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/jquery.form-2.36.js\"></script>\n",webifConf.www);
		wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/jquery.timepickr.min.js\"></script>\n",webifConf.www);
		wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/formHandler.js\"></script>\n",webifConf.www);
		wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/timers.js\"></script>\n",webifConf.www);
		wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/searches.js\"></script>\n",webifConf.www);
		wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/epgGrid.js\"></script>\n",webifConf.www);

		wctx_printfn(wctx,"<script type=\"text/javascript\">\n",0,1);
		wctx_printf0(wctx,"$(function(){webif.epgGridPageInit();});\n");
		wctx_printfn(wctx,"$.extend(webif.actions,{\n",0,1);
		wctx_printf0(wctx,"getTimers:%d,\n",PA_GET_TIMERS);
		wctx_printf0(wctx,"getEpgGrid:%d,\n",PA_GET_EPG_GRID);
		wctx_printf0(wctx,"timerCreateFromEvent:%d,\n",PA_TIMER_CREATE_FROM_EVENT);
		wctx_printf0(wctx,"searchCreateFromEvent:%d,\n",PA_SEARCH_CREATE_FROM_EVENT);
		wctx_printfn(wctx,"});\n",-1,0);
		wctx_printfn(wctx,"$.extend(webif.messages,{\n",0,1);
		wctx_printf0(wctx,"timerCreate:\"%s\",\n",tr("timer.create"));
		wctx_printf0(wctx,"timerDeleteConfirm:\"%s\",\n",tr("timer.delete.confirm"));
		wctx_printf0(wctx,"searchCreate:\"%s\",\n",tr("search.create"));
		wctx_printfn(wctx,"});\n",-1,0);
		wctx_printfn(wctx,"$.extend(webif.images,{\n",0,1);
		wctx_printf0(wctx,"calendar:\"%s/images/calendar.gif\",\n",webifConf.www);
		wctx_printfn(wctx,"});\n",-1,0);

		if (wctx->currentAction==PA_GET_EPG_GRID){
			wctx_printfn(wctx,"$.datepicker.setDefaults({\n",0,1);
			wctx_printfn(wctx,"dayNames: [\n",0,1);
			for(i=0;i<7;i++){
				wctx_printf0(wctx,"\"%s\"%s\n",weekdays[langId][i],(i<6)?",":"");
			}
			wctx_printfn(wctx,"],\n",-1,0); //dayNames
			wctx_printfn(wctx,"dayNamesMin: [\n",0,1);
			for(i=0;i<7;i++){
				wctx_printf0(wctx,"\"%.2s\"%s\n",shortWeekdays[langId][i],(i<6)?",":"");
			}
			wctx_printfn(wctx,"],\n",-1,0); //dayNamesMin
			wctx_printf0(wctx,"firstDay: %d,\n",startOfWeek[langId]);
			wctx_printfn(wctx,"monthNames: [\n",0,1);
			for(i=0;i<12;i++){
				wctx_printf0(wctx,"\"%s\"%s\n",monthNames[langId][i],(i<11)?",":"");
			}
			wctx_printfn(wctx,"],\n",-1,0); //monthNames
			wctx_printfn(wctx,"monthNamesShort: [\n",0,1);
			for(i=0;i<12;i++){
				wctx_printf0(wctx,"\"%.3s\"%s\n",monthNames[langId][i],(i<11)?",":"");
			}
			wctx_printfn(wctx,"],\n",-1,0); //monthNamesShort
			wctx_printf0(wctx,"buttonText: \"%s\",\n","Escoger dí­a"); //TODO i18n
			wctx_printfn(wctx,"});\n",-1,0); //setDefaults
		}
		wctx_printfn(wctx,"</script>\n",-1,0);
	}
}

%><%

	#ifdef DEBUG
	dbg_epgGrid_kl1();
	#endif

	wcontext_t vwctx;
	wcontext_t *wctx=&vwctx;
	if (initCtx(wctx,PN_EPG_GRID,session,request,response,out,100)){
		vars_t *args = request_get_args(request);

		wctx->currentAction=(vars_countn(args,"a")>0) ? vars_get_value_i(args,"a") : PA_GET_EPG_GRID;

		initHtmlPage(wctx,tr("epg.grid"),printHtmlHeadExtra);
		if (!wctx->isAjaxRequest){
			wctx_printfn(wctx,"<div class=\"level2-div ui-widget\">\n",0,1);
			wctx_printf0(wctx,"<h2 class=\"level2-top ui-widget-header\">%s</h2>\n",tr("epg.grid"));
			wctx_printfn(wctx,"<div class=\"level2 ui-widget-content ui-helper-clearfix\">\n",0,1);
		}

		hostConf_t *host=(vars_countn(args,"hostId")>0) ? getHost(vars_get_value_i(args,"hostId")) : getFirstVdrHost();
		if (!host) {
			printMessage(wctx,"alert",tr("errorNoVdrHost"),NULL, false);
		} else {
			channelList_t channels;
			timerList_t timers;
			getChannelList(host,&channels,SF_CH_NUMBER,SD_ASC);
			getTimerList(&timers,&channels,SF_START,SD_ASC);

			if (channels.length==0){
				printMessage(wctx,"alert",tr("warnNoEPG"),NULL, false);
			} else {
				events_t events;
				if (wctx->currentAction==PA_GET_EPG_GRID){
					initEvents(&events);
					getEpgGridLimits(vars_get_value(args,"start"),&events.start,&events.end);
					events.dumpMode=dmBetween;
					getEvents(host,&events,&channels);
					if (events.length==0){
						printMessage(wctx,"alert",tr("warnNoEPG"),NULL, false);
					} else {
						printEpgGrid(wctx,&events,&channels,&timers);
					}
					freeEvents(&events);
				} else if (wctx->currentAction==PA_GET_TIMERS){
					time_t start, end;
					getEpgGridLimits(vars_get_value(args,"start"),&start,&end);
					printTimersDiv(wctx,"timers",&timers,start,end);
				}
			}
			freeChannelList(&channels);
			freeTimerList(&timers);
		}
		if (!wctx->isAjaxRequest){
			wctx_printfn(wctx,"</div>\n",-1,0); //level2
			wctx_printfn(wctx,"</div>\n",-1,0); //level2-div
		}
		finishHtmlPage(wctx);
		closeSvdrpAll();
	}
	freeCtx(wctx);
%>
