<%!
/*
* 
* This source-code is licensed under GPL v2.
* See ../../LICENSE for details
* 
* Originally written for http://vdr-m7x0.foroactivo.com.es by:
* atinar <atinar1@hotmail.com>
* 
* You will need the KLONE web application development framework
* from www.koanlogic.com Version 2.
* 
*/

#include <klapp_conf.h>
#include <time.h>

time_t now;

#include "i18n.h"
#include "misc.h"
#include "channels.h"
#include "epg.h"
#include "conf.h"
#include "svdrp_comm.h"
#include "timers.h"

#ifdef DEBUG
static void dbg_epgGrid_kl1(void) {
   dbg("epgGrid.kl1");
}
#endif

static void printHtmlHeadExtra(context_t *ctx){
   int i;
	if (!ctx->isAjaxRequest){
		ctx_printf0(ctx,"<link rel=\"stylesheet\" type=\"text/css\" href=\"%s/css/jquery.timepickr.css\" media=\"screen\" />\n",webifConf.www);
		ctx_printf0(ctx,"<link rel=\"stylesheet\" type=\"text/css\" href=\"%s/css/epgGrid.css\" media=\"screen\" />\n",webifConf.www);
		ctx_printfn(ctx,"<style type=\"text/css\">",0,1);
		ctx_printf0(ctx,"#grid-div #channels div.logo {width:%dpx;}",CHAN_LOGO_W);
		ctx_printf0(ctx,"#grid-div #channels div.logo img {width:%dpx;height:%dpx;}",webifConf.channelLogoWidth,webifConf.channelLogoWidth);
		ctx_printf0(ctx,"#grid-div .channel .channelEvents {min-height:%dpx;}",webifConf.channelLogoWidth);
		ctx_printfn(ctx,"</style>",-1,0);

		ctx_printf0(ctx,"<script type=\"text/javascript\" src=\"%s/js/jquery.form-2.36.js\"></script>\n",webifConf.www);
		ctx_printf0(ctx,"<script type=\"text/javascript\" src=\"%s/js/jquery.timepickr.min.js\"></script>\n",webifConf.www);
		ctx_printf0(ctx,"<script type=\"text/javascript\" src=\"%s/js/formHandler.js\"></script>\n",webifConf.www);
		ctx_printf0(ctx,"<script type=\"text/javascript\" src=\"%s/js/timers.js\"></script>\n",webifConf.www);
		ctx_printf0(ctx,"<script type=\"text/javascript\" src=\"%s/js/searches.js\"></script>\n",webifConf.www);
		ctx_printf0(ctx,"<script type=\"text/javascript\" src=\"%s/js/epgGrid.js\"></script>\n",webifConf.www);

		ctx_printfn(ctx,"<script type=\"text/javascript\">\n",0,1);
		ctx_printf0(ctx,"$(function(){webif.epgGridPageInit();});\n");
		ctx_printfn(ctx,"$.extend(webif.actions,{\n",0,1);
		ctx_printf0(ctx,"getTimers:%d,\n",PA_GET_TIMERS);
		ctx_printf0(ctx,"getEpgGrid:%d,\n",PA_GET_EPG_GRID);
		ctx_printf0(ctx,"timerCreateFromEvent:%d,\n",PA_TIMER_CREATE_FROM_EVENT);
		ctx_printf0(ctx,"searchCreateFromEvent:%d,\n",PA_SEARCH_CREATE_FROM_EVENT);
		ctx_printfn(ctx,"});\n",-1,0);
		ctx_printfn(ctx,"$.extend(webif.messages,{\n",0,1);
		ctx_printf0(ctx,"timerCreate:\"%s\",\n",tr("timer.create"));
		ctx_printf0(ctx,"timerDeleteConfirm:\"%s\",\n",tr("timer.delete.confirm"));
		ctx_printf0(ctx,"searchCreate:\"%s\",\n",tr("search.create"));
		ctx_printfn(ctx,"});\n",-1,0);
		ctx_printfn(ctx,"$.extend(webif.images,{\n",0,1);
		ctx_printf0(ctx,"calendar:\"%s/images/calendar.gif\",\n",webifConf.www);
		ctx_printfn(ctx,"});\n",-1,0);

		if (ctx->currentAction==PA_GET_EPG_GRID){
			ctx_printfn(ctx,"$.datepicker.setDefaults({\n",0,1);
			ctx_printfn(ctx,"dayNames: [\n",0,1);
			for(i=0;i<7;i++){
				ctx_printf0(ctx,"\"%s\"%s\n",weekdays[langId][i],(i<6)?",":"");
			}
			ctx_printfn(ctx,"],\n",-1,0); //dayNames
			ctx_printfn(ctx,"dayNamesMin: [\n",0,1);
			for(i=0;i<7;i++){
				ctx_printf0(ctx,"\"%.2s\"%s\n",shortWeekdays[langId][i],(i<6)?",":"");
			}
			ctx_printfn(ctx,"],\n",-1,0); //dayNamesMin
			ctx_printf0(ctx,"firstDay: %d,\n",startOfWeek[langId]);
			ctx_printfn(ctx,"monthNames: [\n",0,1);
			for(i=0;i<12;i++){
				ctx_printf0(ctx,"\"%s\"%s\n",monthNames[langId][i],(i<11)?",":"");
			}
			ctx_printfn(ctx,"],\n",-1,0); //monthNames
			ctx_printfn(ctx,"monthNamesShort: [\n",0,1);
			for(i=0;i<12;i++){
				ctx_printf0(ctx,"\"%.3s\"%s\n",monthNames[langId][i],(i<11)?",":"");
			}
			ctx_printfn(ctx,"],\n",-1,0); //monthNamesShort
			ctx_printfn(ctx,"});\n",-1,0); //setDefaults
		}
		ctx_printfn(ctx,"</script>\n",-1,0);
	}
}

%><%

	#ifdef DEBUG
	dbg_epgGrid_kl1();
	#endif

	context_t vctx;
	context_t *ctx=&vctx;
	initCtx(ctx,session,request,response,out,100);
	vars_t *args = request_get_args(request);

	ctx->currentPage=PN_EPG_GRID;
	ctx->currentAction=(vars_countn(args,"a")>0) ? vars_get_value_i(args,"a") : PA_GET_EPG_GRID;

	initHtmlPage(ctx,tr("epg.grid"),printHtmlHeadExtra);
	if (!ctx->isAjaxRequest){
		ctx_printfn(ctx,"<div class=\"level2-div ui-widget\">\n",0,1);
		ctx_printf0(ctx,"<h2 class=\"level2-top ui-widget-header\">%s</h2>\n",tr("epg.grid"));
		ctx_printfn(ctx,"<div class=\"level2 ui-widget-content ui-helper-clearfix\">\n",0,1);
	}

	hostConf_t *host=(vars_countn(args,"hostId")>0) ? getHost(vars_get_value_i(args,"hostId")) : getFirstVdrHost();
	if (!host) {
		printMessage(ctx,"alert",tr("errorNoVdrHost"),NULL, BT_FALSE);
	} else {
		channelList_t channels;
		timerList_t timers;
		getChannelList(host,&channels,SF_CH_NUMBER,SD_ASC);
		getTimerList(&timers,&channels,SF_START,SD_ASC);

		if (channels.length==0){
			printMessage(ctx,"alert",tr("warnNoEPG"),NULL, BT_FALSE);
		} else {
			events_t events;
			if (ctx->currentAction==PA_GET_EPG_GRID){
				initEvents(&events);
				getEpgGridLimits(vars_get_value(args,"start"),&events.start,&events.end);
				events.dumpMode=dmBetween;
				getEvents(host,&events,&channels);
				if (events.length==0){
					printMessage(ctx,"alert",tr("warnNoEPG"),NULL, BT_FALSE);
				} else {
					printEpgGrid(ctx,&events,&channels,&timers);
				}
				freeEvents(&events);
			} else if (ctx->currentAction==PA_GET_TIMERS){
				time_t start, end;
				getEpgGridLimits(vars_get_value(args,"start"),&start,&end);
				printTimersDiv(ctx,"timers",&timers,start,end);
			}
		}
		freeChannelList(&channels);
		freeTimerList(&timers);
	}
	if (!ctx->isAjaxRequest){
		ctx_printfn(ctx,"</div>\n",-1,0); //level2
		ctx_printfn(ctx,"</div>\n",-1,0); //level2-div
	}
	finishHtmlPage(ctx);
	freeCtx(ctx);
	closeSvdrpAll();
%>
