#!/bin/sh

vdr=VDR-NG
plugins=VDR-Plugins/Source+patch
vdr_plugins=$vdr/PLUGINS/src
vdr_plugins_lib=$vdr/PLUGINS/lib
TC_bin=`pwd`/VDR-NG-FW/m7x0_xtc_uclibc_Linux-i686/bin

if [[ ! -d "$TC_bin" ]]
then
    echo "ToolChain-bin dir not found: $TC_bin" 1>&2
    exit 1
else
    export PATH="$TC_bin:$PATH"
fi

# Update VDR-NG and plugins from SVN open7x0.org from SVN open7x0.org
if [[ ! -d "$vdr" ]]
then
	./make-vdr

	echo "CHECKOUT: $vdr_plugins"
        rm -rf $vdr_plugins/
	mkdir $vdr_plugins/
	svn checkout -q "svn://open7x0.org/vdr-m7x0-PLUGINS/branches/unstable" "$vdr_plugins"
	rm -rf "$vdr_plugins/sharedlibs"
fi

# Update plugins from SVN
if [[ ! -d "$plugins" ]]
then
	echo "Update: $plugins"
	svn update "$plugins"
fi

# Patching plugins
for dp in `ls $plugins `; do
	if [ -d $plugins/$dp ] ; then
		for dps in `ls $plugins/$dp/`; do
			if [ -d $plugins/$dp/$dps ] ; then
			        dptarget=`echo $dps | cut -d'-' -f1`

				# Clean patch
			        rm -rf $vdr_plugins/$dptarget/
				mkdir $vdr_plugins/$dptarget/

				# Copy plugin
				cp -Trf $plugins/$dp/$dps $vdr_plugins/$dptarget
				find $vdr_plugins/$dptarget/ '(' -name '.svn'  ')' -exec rm -rf {} \; 2> /dev/null

				# Patching plugins
				./patching $vdr_plugins/$dptarget/ $plugins/$dp
			fi
		done
	fi
done;

# Compiling plugins
( cd $vdr; make plugins )

# Stripping plugins
for libvdr in `ls $vdr_plugins_lib ` ; do 
	mips-linux-uclibc-strip $vdr_plugins_lib/$libvdr
done;
