#!/bin/bash
copyright="(c) Lemmi, m740av (at) cle-mens.de, 2007-04-03, GPL2"

#
#------------------------------------------------------------------------------
# setup

LC_ALL=POSIX

#----- my path
BASE="${0%/*}"

#----- path for rsa files
RSA="$BASE/rsa"

#----- path for local binaries
BIN="$BASE/bin-i386"
[[ -d $BIN ]] || BIN="$BASE"

#----- box support
if [[ -f /etc/fw-info ]]
then
    # vdr firmware
    BIN="$BASE/bin-m7x0-vdr"
    [[ -d $BIN ]] || BIN=/sbin
    [[ -d $RSA ]] || RSA=/usr/lib/rsa

elif  [[ -f /etc/lemmi-settings.conf ]]
then
    # andere m7x0 firmware
    BIN="$BASE/bin-m7x0-static"
fi

#----- commands
CMD_RSAENCODE="$BIN/rsaencode"

#----- some more stuff
temp=`mktemp -d /tmp/gen-wsw.$$.XXXXXXXX` || exit 1

#
#------------------------------------------------------------------------------
# help

function help_exit()
{
    cat <<- ---EOT--- >&2

	Usage: ${0##*/} [option]...  wsw_file...

	  Options:

	    -h  --help         print this help
	    -v  --verbose      be verbose
	    -q  --quiet        be quiet

	    -n  --name  text   write 'text' as firmware information into wsw
	    -t  --time  time   write 'time' as timestamp, default=current time

	$copyright

	---EOT---

    rm -rf $temp
    exit 1
}

((!$#)) && help_exit

function info_exit()
{
    {
	echo ""
	while (($#)); do echo "${0##*/}: $1"; shift; done
	echo ""
    } >&2
    rm -rf $temp
    let errcount++
    return 1
}

#
#------------------------------------------------------------------------------
# getopt

args=`getopt -n "${0##*/}" \
        -l help,verbose,quiet,name:,time: \
        -o hvqn:t: \
        -- "$@"`
if (( $? )); then
    echo "${0##*/}: try option -h or --help for more help" >&2
    exit 1
fi

eval set -- $args

#
#------------------------------------------------------------------------------
# analyse options

quiet=0
verbose=0

name=
time=`date +%s`

scan_opt=1

while (( $# && scan_opt ))
do
    [[ "$1" = "" ]] && shift && continue
    case "$1" in
	--)		scan_opt=0 ;;

	-h|--help)	help_exit ;;
	-q|--quiet)	quiet=1 verbose=0 ;;
	-v|--verbose)	quiet=0 verbose=1 ;;

	-n|--name)	shift; name="${1:0:63}" ;;
	-t|--time)	shift; time="${1//[!0-9]}" ;;

	*)		echo "${0##*/}: INTERNAL ERROR 'option': $1" >&2
			exit 1 ;;
    esac
    shift
done

#----- verbose

if ((verbose))
then
    VOUT=/dev/stdout
    VERR=/dev/stderr
    echo "${0##*/}: BIN=$BIN"
    echo "${0##*/}: RSA=$RSA"
else
    VOUT=/dev/null
    VERR=/dev/null
fi

#----- param

if (( $# == 1 ))
then
    NAME="${1##*/}"
    NAME="${NAME%.wsw}"
    NAME="${NAME:0:63}"
else
    NAME="${1:0:63}"
fi
[[ $NAME = "" ]] \
	&& info_exit "missing wsw name"

WSW="$2"
[[ $WSW = "" ]] && WSW="$1"
[[ -d $WSW ]] && WSW="$WSW/${1##*/}"
[[ ${WSW##*.} != "wsw" ]] && WSW="$WSW.wsw"

(( $# > 2 )) \
	&& info_exit "to much parameters: $*"

#
#------------------------------------------------------------------------------
# some functions

function hexdump() # pos len
{
    local len=$(($2))
    od -j$(($1)) -N$len -w$len -tx1 -An "$wsw"
}

#
#------------------------------------------------------------------------------
# main loop

errcount=0
n_files=$#

while (( $# ))
do
    wsw="$1"
    shift
    [[ -f $wsw ]] || info_exit $ERR_NOTFOUND "file not found: $wsw" || continue
    ((!quiet)) && echo ">>> sign file '$wsw'"

    #----- check magic

    ((verbose)) && echo " - check magic"
    magic=`hexdump 0 8`
    [[ $magic = " 57 53 57 20 00 24 00 2c" ]] \
	|| info_exit "wrong magic:$magic" || continue

    #----- check file lenght

    maplen=`hexdump 0x484 4`
    maplen=$((16#${maplen// }))

    wswsize=`stat -c%s "$wsw"`
    let goodsize=16#588+maplen*16#10000
    (( wswsize == goodsize )) \
	|| info_exit "wrong WSW size: wanted=$goodsize but not $wswsize, delta=$((wswsize-goodsize))" \
	|| continue

    #----- write firmware name

    if [[ $name != "" ]]
    then
	echo -n "$name" | dd bs=1 "of=$wsw" seek=$((16#440)) conv=notrunc 2>$VERR
    fi

    #----- write time stamp

    printf "`printf "\\%03o\\%03o\\%03o\\%03o" $((time>>24&255)) $((time>>16&255)) $((time>>8&255)) $((time&255))`" \
	| dd bs=1 "of=$wsw" seek=$((16#480)) conv=notrunc 2>$VERR

    #----- calculate md5 sum

    md5="`dd "if=$WSW" bs=1024 skip=1 2>$VERR | md5sum`"
    ((verbose)) && echo "${0##*/}: MD5: $md5"

    #----- sign wsw

    {
	/bin/echo -en "\054"
	echo "$md5" | "$CMD_RSAENCODE" "$RSA/private1.rsa" || info_exit "sign #1 failed"
    } | dd "of=$WSW" bs=1 seek=7 conv=notrunc 2>$VERR

    {
	/bin/echo -en "\201"
	echo "$md5" | "$CMD_RSAENCODE" "$RSA/private2.rsa" || info_exit "sign #2 failed"
    } | dd "of=$WSW" bs=1 seek=67 conv=notrunc 2>$VERR

done

#
#------------------------------------------------------------------------------
# clean

rm -rf $temp
if ((errcount))
then
    echo -e "\n*** ${0##*/} *** ERRORS IN $errcount WSW FILE(S) FOUND ***\n" >&2
    exit 1
fi

exit 0

