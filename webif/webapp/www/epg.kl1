<%!
/*
* 
* This source-code is licensed under GPL v2.
* See ../../LICENSE for details
* 
* (c) Christian Kelinski <k@kille.cx>
* Please checkout the README file!
* 
* Originally written for the open7x0.org VDR-FW project:
* www.open7x0.org
* 
* Modified for http://vdr-m7x0.foroactivo.com.es by:
* atinar <atinar1@hotmail.com>
* 
* You will need the KLONE web application development framework
* from www.koanlogic.com Version 2.
* 
*/

#include <klapp_conf.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>
#include <u/libu.h>

#include "channels.h"
#include "epg.h"
#include "i18n.h"
#include "timers.h"
#include "svdrp_comm.h"

#ifdef DEBUG
static void dbg_epg_kl1(void) { 
   dbg("epg.kl1"); 
}
#endif

static void printHtmlHeadExtra(wcontext_t *wctx){
	if (!wctx->isAjaxRequest){
		wctx_printf0(wctx,"<link rel=\"stylesheet\" type=\"text/css\" href=\"%s/css/epg.css\" media=\"screen\" />\n",webifConf.www);
		wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/jquery.form-2.36.js\"></script>\n",webifConf.www);
		wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/formHandler.js\"></script>\n",webifConf.www);
		wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/timers.js\"></script>\n",webifConf.www);
		wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/searches.js\"></script>\n",webifConf.www);
		wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/epg.js\"></script>\n",webifConf.www);
	}
	initJavascript(wctx);
	if (!wctx->isAjaxRequest){
		wctx_printf0(wctx,"$(function(){webif.epgPageInit();});\n");
	}
	wctx_printfn(wctx,"$.extend(webif.messages,{\n",0,1);
	wctx_printf0(wctx,"timerDeleteConfirm:'%s',\n",tr("timer.delete.confirm"));
	wctx_printfn(wctx,"});\n",-1,0);
	finishJavascript(wctx);
}

%><%
	#ifdef DEBUG
	dbg_epg_kl1();
	#endif

	int i=0;
	int channelNum=0;

	vars_t *args = request_get_args(request);
	channelNum=vars_get_value_i(args,"channelNum");

	wcontext_t vwctx;
	wcontext_t *wctx=&vwctx;
	if (initCtx(wctx,PN_PROGRAMS,session,request,response,out,2048)){
		wctx->currentChannelNum=channelNum;
		
		const char *Epg=tr("epg");
		initHtmlPage(wctx,Epg,printHtmlHeadExtra);
		
		hostConf_t *host=getFirstVdrHost();
		if (!host){
			wctx_printfn(wctx,"<div class=\"messageDialog\">\n",0,1);
			printMessage(wctx,"alert",tr("errorNoVdrHost"),NULL, false);
			wctx_printfn(wctx,"</div>\n",-1,0); //messageDialog
		} else {
			channelList_t channels;
			timerList_t timers;
			conflictList_t conflicts;
			getChannelList(host,&channels,SF_CH_NUMBER,SD_ASC);
			getTimerList(&timers,&channels,SF_START,SD_ASC);
			getConflictList(&conflicts,&timers);

			bool isTv;
			if (!wctx->isAjaxRequest){
				wctx_printfn(wctx,"<div class=\"level2-div ui-widget\">\n",0,1);
			}
			if (channelNum<1) channelNum=1;
			channel_t *channel=channels.channel+channelNum-1;
			if (!wctx->isAjaxRequest){
				wctx_printfn(wctx,"<h2 class=\"level2-top ui-widget-header\">%s %s &raquo;%s&laquo;\n",0,1
					,tr("epg"),tr("for"),channel->channelName);
				if (!webifConf.noLogos){
					wctx_printf0(wctx,"<img id=\"logo\" src=\"www2/images/logos/%s.png\"/>\n",wctxChannelFilename(wctx,channel->channelName,true));
				}
				wctx_printfn(wctx,"</h2>\n",-1,0);
				wctx_printfn(wctx,"<div class=\"level2 ui-widget-content\">\n",0,1);
			}

			wctx_printfn(wctx,"<div id=\"epg-div\" class=\"level3-div\">\n",0,1);
			wctx_printfn(wctx,"<div class=\"level3-top\">\n",0,1);

			wctx_printfn(wctx,"<form id=\"channelChange\" action=\"/epg.kl1\" method=\"get\">\n",1,0);
			wctx_printfn(wctx,"<label>%s\n",0,1,tr("channel"));
			printChannelListSelect(wctx,"channelNum","channelNum",&channels,channelNum,"this.form.submit();");
			wctx_printfn(wctx,"</label>\n",-1,0);
			wctx_printfn(wctx,"</form>\n",-1,0);
			wctx_printfn(wctx,"</div>\n",-1,0); //level3-top

			printChannelEpg(wctx,"epg",host,channelNum,&timers);

			wctx_printfn(wctx,"</div>\n",-1,0); //level3-div
			freeConflictList(&conflicts);
			freeTimerList(&timers);
			freeChannelList(&channels);
		}
		if (!wctx->isAjaxRequest){
			wctx_printfn(wctx,"</div>\n",-1,0); //level2
			wctx_printfn(wctx,"</div>\n",-1,0); //level2-div
		}
		finishHtmlPage(wctx);
		closeSvdrpAll();
	}
	freeCtx(wctx);
%>

