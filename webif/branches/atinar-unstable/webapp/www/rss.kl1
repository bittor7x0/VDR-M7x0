<%!
/*
* 
* This source-code is licensed under GPL v2.
* See ../../LICENSE for details
* 
* (c) Christian Kelinski <k@kille.cx>
* Please checkout the README file!
* 
* Originally written for the open7x0.org VDR-FW project:
* www.open7x0.org
* 
* You will need the KLONE web application development framework
* from www.koanlogic.com Version 2.
* 
*/

#include <klapp_conf.h>
#include <time.h>

time_t now;

#include "i18n.h"
#include "misc.h"
#include "recordings.h"
#include "svdrp_comm.h"
#include "svdrp_parse.h"

%><%
recEntry * recs;
int max_recs=0;
int i=0;
char myip[16]="";
whatsmyip(myip);

const char dayStr[7][4]={"Sun","Mon","Tue","Wed","Thu","Fri","Sat"};
const char monthStr[12][4]={"Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"};

/*if (open_svdrp()!=0) {
  max_recs=-1;
  response_set_status(response,503);
  exit(1);
}*/

recs=getRecList(&max_recs,sortStart,sortDesc);

header_t *header = request_get_header(request);
if (header_get_field(header,"Accept-Language")!=NULL) {
  field_t *field=header_get_field(header,"Accept-Language");
  strncpy(acceptedLang,field->value,2);
  acceptedLang[2]='\0';
}

getConfig();

response_set_content_type(response,"application/rss+xml");
%><?xml version="1.0" encoding="ISO-8859-1"?>
<rss version="2.0">
<channel>
 <title><% io_printf(out,tr("Recordings")); %> VDR</title>
 <description><% io_printf(out,i18n[16][langID]); %></description>
 <language>de-de</language>
<%
  if (max_recs>0) {
    struct tm t=*localtime(&recs[0].start);
    io_printf(out," <pubDate>%s, %02d %s %04d %02d:%02d:00 %s</pubDate>\n",dayStr[t.tm_wday],t.tm_mday,monthStr[t.tm_mon],1900+t.tm_year,t.tm_hour,t.tm_min,tzname[isDST(&recs[0].start)]);
  }
  if (httpPort==80) {
    io_printf(out," <link>http://%s/</link>\n",myip);
  } else {
    io_printf(out," <link>http://%s:%d/</link>\n",myip,httpPort);	  
  }

  for (i=0;i<max_recs;i++) {
    struct tm t=*localtime(&recs[i].start);

    io_printf(out," <item>\n  <title>[%s %02d.%02d.%04d, %02d:%02d] %s</title>\n",wochentage[t.tm_wday],t.tm_mday,1+t.tm_mon,1900+t.tm_year,t.tm_hour,t.tm_min,recs[i].title);
    io_printf(out,"  <description>[%s %02d.%02d.%04d] %02d:%02d: %s</description>",wochentage[t.tm_wday],t.tm_mday,1+t.tm_mon,1900+t.tm_year,t.tm_hour,t.tm_min,recs[i].title);
    if (httpPort==80) {
      io_printf(out,"  <link>http://%s/recordings.kl1</link>\n",myip);
    } else {
      io_printf(out,"  <link>http://%s:%d/recordings.kl1</link>\n",myip,httpPort);
    }
    io_printf(out,"  <guid isPermaLink=\"false\">%d%s</guid>\n",recs[i].start,recs[i].title);
    io_printf(out,"  <pubDate>%s, %02d %s %04d %02d:%02d:00 %s</pubDate>\n </item>\n",dayStr[t.tm_wday],t.tm_mday,monthStr[t.tm_mon],1900+t.tm_year,t.tm_hour,t.tm_min,tzname[isDST(&recs[i].start)]);
  }
  free(recs);
  close_svdrp();
%>

</channel>
</rss>

