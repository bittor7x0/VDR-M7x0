<%!
/*
* 
* This source-code is licensed under GPL v2.
* See ../../LICENSE for details
* 
* (c) Christian Kelinski <k@kille.cx>
* Please checkout the README file!
* 
* Originally written for the open7x0.org VDR-FW project:
* www.open7x0.org
* 
* You will need the KLONE web application development framework
* from www.koanlogic.com Version 2.
* 
*/

#include <klapp_conf.h>
#include <time.h>
#include <sys/types.h>
#include <sys/stat.h>

time_t now;

#include "i18n.h"
#include "misc.h"
#include "conf.h"

%><%
char myip[16]="";
whatsmyip(myip);

static struct __fileMapping {
  const char *name;
  const char *file;
  const char *longName;
} fileMapping[] = {
  {"syslog", "/var/log/messages", "SysLog"},
  {"vdr", "/etc/vdr/setup.conf", "VDR Setup"},
  {"fstab", "/etc/fstab", "fstab"},
  {"rc", "/etc/rc.conf", "rc.conf"},
  {"rclocal", "/etc/rc.local.conf", "rc.local.conf"},
  {"bootmenu" "/etc/bootmenu/bootmenu.conf", "Bootmenu"},
  {"svdrp", "/etc/vdr/svdrphosts.conf", "SVDRP Hosts"},
  {"channels", "/etc/vdr/channels.conf", "Channels"},
  {"streamdev", "/etc/vdr/plugins/streamdevhosts.conf", "Streamdevice Server Hosts"},
  {"boxamp", "/etc/bootmenu/bm.local.boxamp.conf", "BoxAmp"}
};
const int maxFileMapping=10;

header_t *header = request_get_header(request);
if (header_get_field(header,"Accept-Language")!=NULL) {
  field_t *field=header_get_field(header,"Accept-Language");
  strncpy(acceptedLang,field->value,2);
  acceptedLang[2]='\0';
}

vars_t *args = request_get_args(request);
const char * viewFile=NULL;
int fileNum=-1;

int action=0;
int i=0;
if (vars_countn(args,"show")>0) {
  viewFile=vars_get_value(args,"show");
  action=1;
}

if (vars_countn(args,"print")>0) {
  viewFile=vars_get_value(args,"print");
  action=2;
}

if (vars_countn(args,"save")>0) {
  viewFile=vars_get_value(args,"save");
  action=3;
}

if (vars_countn(args,"all")>0) {
  viewFile=vars_get_value(args,"all");
  action=4;
}

if (viewFile!=NULL) {
  for(i=0;i<maxFileMapping;i++) {
    if(!strcmp(fileMapping[i].name,viewFile)) {
      fileNum=i;	
    }
  }
} else { fileNum=0; }
if ((action<1) || (action>4)) { action=1; }

getConfig();

if (action==3) {
  response_set_content_type(response, "application/octetstream");
  char cd[strlen(fileMapping[fileNum].name)+30];
  sprintf(cd,"attachment; filename=\"%s.txt\"",fileMapping[fileNum].name);
  response_set_field(response,"Content-Disposition",cd);
  FILE *f = fopen(fileMapping[fileNum].file,"r");
  if (f) {
    char buffer[1024];
    while(fgets(buffer,1023,f)!=NULL) {
      io_printf(out,"%s",buffer);
    }
    fclose(f);
  }
} else if (action==4) {
  char *argumente[maxFileMapping+4];
  argumente[0]="tar";
  argumente[1]="-czf";
  argumente[2]="/var/tmp/files.tar.gz";
  for (i=0;i<maxFileMapping;i++) {
    argumente[3+i]=fileMapping[i].file;
  }
  argumente[maxFileMapping+3]=NULL;
  pid_t pid=0;
  int status;
  pid=fork();
  if (pid==0) {
    execvp("/bin/tar", argumente);
  }
  if (pid>0) {
    waitpid(pid,NULL,0);
    response_set_content_type(response, "application/gzip");
    response_set_field(response,"Content-Disposition","attachment; filename=\"files.tar.gz\"");
    FILE *f = fopen("/var/tmp/files.tar.gz","rb");
    if (f) {
      char buffer;
      int bytesRead;
      while(!feof(f)) {
      	buffer=fgetc(f);
      	io_putc(out,buffer);
      }
      fclose(f);
    }
  }
} else {
%><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="de" lang="de">
<head>
<title><% if (fileNum>-1) { io_printf(out,fileMapping[fileNum].longName); } else { io_printf(out,"view"); } %> - open7x0 VDR-FW</title>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-15" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<%
if (action==1) {
  io_printf(out,"<link rel=\"stylesheet\" type=\"text/css\" href=\"open7x0.css\" />\n");
} else {
  io_printf(out,"<link rel=\"stylesheet\" type=\"text/css\" href=\"open7x0-print.css\" />\n");
}
%>
</head>
<body>

<div class="head">
VDR-FW <% io_printf(out,tr("Setup Webinterface")); %>
</div>
<div class="navigation"><div class="nav">
<ul>
 <li><a href="index.kl1"><% io_printf(out,i18n[4][langID]); %></a></li>
 <li><a href="program.kl1"><% io_printf(out,i18n[5][langID]); %></a></li>
 <li><a href="channels.kl1"><% io_printf(out,i18n[6][langID]); %></a></li>
 <li><a href="timers.kl1"><% io_printf(out,i18n[7][langID]); %></a></li>
 <li><a href="recordings.kl1"><% io_printf(out,i18n[8][langID]); %></a></li>
 <li class="act"><a href="settings.kl1"><% io_printf(out,i18n[9][langID]); %></a></li>
 <li><a href="http://www.open7x0.org/" target="_blank">open7x0.org</a></li>
</ul>
<span id="navclear"></span>
</div>
<div class="liniefett"></div>
<div class="nav2">
<ul><%
int i=0;
for (i=0;i<numOfConfFiles;i++) {
	io_printf(out," <li><a href=\"settings.kl1?show=%s\">%s</a></li>\n",confFileProperties[i].name,tr(confFileProperties[i].longName));
}
%>
 <li class="act"><a href="view.kl1">FileView</a></li>
</ul>
</div>
</div>

<div class="content">
<div class="fileView">
<%
for(i=0;i<maxFileMapping;i++) {
  if (fileExists(fileMapping[i].file)) {
    io_printf(out,"<a href=\"view.kl1?show=%s\">&bull;&nbsp;%s</a>\n",fileMapping[i].name,fileMapping[i].longName);
  }
}
io_printf(out,"<a href=\"view.kl1?all=gz\">&bull;&nbsp;%s</a>\n",tr("download all"));
%></div>

<div class="code"><%
struct stat status;
if ((stat(fileMapping[fileNum].file,&status))>=0) {
  io_printf(out,"<table><tr><td><span>&nbsp;</span><br /><a href=\"view.kl1?save=%s\"><img src=\"/img/floppy16.png\" border=\"0\"></a>",fileMapping[fileNum].name);
  io_printf(out,"&nbsp;<a href=\"view.kl1?print=%s\" target=\"_blank\"><img src=\"/img/printer16.png\" border=\"0\"></a></td>",fileMapping[fileNum].name);
  io_printf(out,"<td><span>File</span><br />%s</td><td><span>Date</span><br />%s</td></tr></table>\n<pre>\n",fileMapping[fileNum].file,ctime(&status.st_mtime));

  FILE *f = fopen(fileMapping[fileNum].file,"r");
  if (f) {
    char buffer[1024];
    while(fgets(buffer,1023,f)!=NULL) {
      io_printf(out,"%s",buffer);
    }
    fclose(f);
  }
  io_printf(out,"</pre>\n");
}
%>
</div>
</div>

<div class="foot">
        <p>(C) 2006-08 open7x0-team</p>
</div>
</body>
</html>
<% 
} 
%>
