<%!
/*
* 
* This source-code is licensed under GPL v2.
* See ../../LICENSE for details
* 
* (c) Christian Kelinski <k@kille.cx>
* Please checkout the README file!
* 
* Originally written for the open7x0.org VDR-FW project:
* www.open7x0.org
* 
* You will need the KLONE web application development framework
* from www.koanlogic.com Version 2.
* 
*/

#include <klapp_conf.h>
#include <time.h>
#include <string.h>

#include "i18n.h"
#include "misc.h"
#include "conf.h"
#include "conf-i18n.h"

%><%
header_t *header = request_get_header(request);
if (header_get_field(header,"Accept-Language")!=NULL) {
  field_t *field=header_get_field(header,"Accept-Language");
  strncpy(acceptedLang,field->value,2);
  acceptedLang[2]='\0';
}

vars_t *args = request_get_args(request);

int action=1;
int confFileID=-1;
const char * showWhat=NULL;
if (vars_countn(args,"show")>0) {
  showWhat=vars_get_value(args,"show");
  action=1;
  confFileID=readConf(showWhat);
  if ( (confFileID<0) || (confFileID>=numOfConfFiles) ) { confFileID=-1; }
} else { 
	confFileID=readConf("webif");
	showWhat=strdup("webif");
}

getConfig();

%><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="de" lang="de">
<head>
<title><% io_printf(out,"%s: %s",tr("Setup"),confFileProperties[confFileID].longName); %> - open7x0 VDR-FW</title>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="open7x0.css" />
</head>
<body>
<div class="head">
VDR-FW <% io_printf(out,"%s: %s",tr("Setup"),confFileProperties[confFileID].longName); %>
</div>
<div class="navigation"><div class="nav">
<ul>
 <li><a href="index.kl1"><% io_printf(out,i18n[4][langID]); %></a></li>
 <li><a href="program.kl1"><% io_printf(out,i18n[5][langID]); %></a></li>
 <li><a href="channels.kl1"><% io_printf(out,i18n[6][langID]); %></a></li>
 <li><a href="timers.kl1"><% io_printf(out,i18n[7][langID]); %></a></li>
 <li><a href="recordings.kl1"><% io_printf(out,i18n[8][langID]); %></a></li>
 <li class="act"><a href="settings.kl1"><% io_printf(out,i18n[9][langID]); %></a></li>
 <li><a href="http://www.open7x0.org/" target="_blank">open7x0.org</a></li>
</ul>
<span id="navclear"></span>
</div>
<div class="liniefett"></div>
<div class="nav2">
<ul><%
int i=0;
for (i=0;i<numOfConfFiles;i++) {
	if ( (showWhat!=NULL) && (!strcmp(showWhat,confFileProperties[i].name)) ) {
		io_printf(out,"<li class=\"act\"><a href=\"setting.kl1?show=%s\">%s</a></li>\n",confFileProperties[i].name,confFileProperties[i].longName);
	} else {
		io_printf(out,"<li><a href=\"settings.kl1?show=%s\">%s</a></li>\n",confFileProperties[i].name,confFileProperties[i].longName);
	}
}
%>
 <li><a href="view.kl1">FileView</a></li>
</ul>
</div>
</div>

<div class="content">
<%

if (confFileID==-1) {
	io_printf(out,"<h2>%s</h2>\n",tr("Konfigurationsdatei nicht vorhanden"));
	io_printf(out,"<p>%s</p>\n",tr("Die Konfigurationsdatei ist nicht vorhanden oder kann nicht gelesen werden."));
}

if ( (confFileID>=0) && (confFileID<numOfConfFiles) ) {
	if (confFileProperties[confFileID].readOk==0) {
		io_printf(out,"<h2>%s</h2>\n",tr("Konfigurationsdatei nicht vorhanden"));
		io_printf(out,"<p>%s <a href=\"\">%s</a> %s</p>",tr("Diese Konfigurationsdatei ist noch nicht vorhanden. Klicken sie"),tr("hier"),tr("um sie zu erstellen."));		
	} else {
		io_printf(out,"<form action=\"settings.kl1\" method=\"get\">\n");
		io_printf(out,"<input type=\"hidden\" name=\"update\" value=\"\" />\n",confFileProperties[confFileID].name);

		struct __confFile * confData=confFileProperties[confFileID].confData;
		for (i=0;i<confFileProperties[confFileID].numOfParams;i++) {
			io_printf(out,"<h2>%s</h2>\n",trConfShort(i18n[1][langID],confData[i].label));
			if (strcmp(confData[i].options,"")) {
			  io_printf(out,"<select name=\"%s\" size=\"1\" style=\"width:300px\">\n",confData[i].name);
			  int j=0;
			  char * s=malloc(strlen(confData[i].options)+1);
			  strcpy(s,confData[i].options);
			  char * option=NULL;
		    for(option=strtok(s,"|");option!=0;option=strtok(0,"|")) {
		    	if (confData[i].type==1) {
		    		io_printf(out," <option value=\"%d\" %s>%s</option>\n",j,selected[sameIntEx(confData[i].value,j)],option);
		    	} else {
		    	  io_printf(out," <option value=\"%s\" %s>%s</option>\n",option,selected[sameString(option,confData[i].value)],option);	
		    	}
		    	j++;
		    }
		    io_printf(out,"</select>\n");
			} else {
			  io_printf(out,"<input type=\"text\" name=\"%s\" value=\"%s\" size=\"40\" />\n",confData[i].name,confData[i].value);
			}
		}

		io_printf(out,"<p><input type=\"submit\" value=\" update \" /></p>\n</form>");
	}
}
%>
</div>

<div class="foot">
        <p>(C) 2006-08 open7x0-team</p>
</div>
</body>
</html>
