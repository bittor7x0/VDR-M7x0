<%!
/*
* 
* This source-code is licensed under GPL v2.
* See ../../LICENSE for details
* 
* (c) Christian Kelinski <k@kille.cx>
* Please checkout the README file!
* 
* Originally written for the open7x0.org VDR-FW project:
* www.open7x0.org
* 
* Modified for http://vdr-m7x0.foroactivo.com.es by:
* atinar <atinar1@hotmail.com>
* 
* You will need the KLONE web application development framework
* from www.koanlogic.com Version 2.
* 
*/

#include <klapp_conf.h>
#include <time.h>

time_t now;

#include "i18n.h"
#include "misc.h"
#include "channels.h"
#include "conf.h"
#include "svdrp_comm.h"

#ifdef DEBUG
static void dbg_channels_kl1(void) {
   dbg("channels.kl1");
}
#endif

static void printHtmlHeadExtra(wcontext_t *wctx){
	wctx_printf0(wctx,"<link rel=\"stylesheet\" type=\"text/css\" href=\"%s/css/channels.css\" media=\"screen\" />\n",webifConf.www);
	wctx_printf0(wctx,"<script type=\"text/javascript\" src=\"%s/js/channels.js\"></script>\n",webifConf.www);
	initJavascript(wctx);
	wctx_printf0(wctx,"$(function(){webif.channelsPageInit();});\n");
	finishJavascript(wctx);
}

%><%

	#ifdef DEBUG
	dbg_channels_kl1();
	#endif

	channelList_t channels;
	channel_t *channel;
	int i=0;

	wcontext_t vwctx;
	wcontext_t *wctx=&vwctx;
	if (initCtx(wctx,PN_CHANNELS,session,request,response,out,0)){
		vars_t *args = request_get_args(request);
		vwctx.sortBy=(vars_countn(args, "sort")>0) ? vars_get_value_i(args,"sort") : SF_CH_NUMBER;
		vwctx.sortDirection=(vars_countn(args, "direction")>0) ? vars_get_value_i(args,"direction") : SD_ASC;

		initHtmlPage(wctx,tr("channels"),printHtmlHeadExtra);

		const char *PlaylistDownload=tr("channels.playlist.download");
		wctx_printfn(wctx,"<div class=\"level2-div ui-widget\">\n",0,1);
		wctx_printfn(wctx,"<h2 class=\"level2-top ui-widget-header\">\n",0,1);
		wctx_printfn(wctx,"<ul class=\"controls\"><li class=\"control\">\n",0,1);
		wctx_printf0(wctx,"<a class=\"button-i ui-state-default\" href=\"playlistch.kl1?type=%d\" title=\"%s\"><span class=\"ui-icon ui-icon-script\">%s</span></a>\n"
			,webifConf.playlistType,PlaylistDownload,PlaylistDownload);
		wctx_printfn(wctx,"</li></ul>\n",-1,0);
		wctx_printf0(wctx,"%s\n",tr("channels"));
		wctx_printfn(wctx,"</h2>\n",-1,0,tr("channels"));

		wctx_printfn(wctx,"<div class=\"level2 ui-widget-content ui-helper-clearfix\">\n",0,1);
		hostConf_t *host=getFirstVdrHost();
		if (!host) {
			printMessage(wctx,"alert",tr("errorNoVdrHost"),NULL, false);
		} else {
			getChannelList(host,&channels,vwctx.sortBy,vwctx.sortDirection);
			
			bool isTv;
			const char *tableId[]={"tvChannels","radioChannels"};
			const char *ChannelDetails=tr("channelDetails");
			const char *Epg=tr("epg");
			const char *LiveStream=tr("liveStream");
			const char *Frequency=tr("frequency");
			const char *Parameters=tr("parameters");
			const char *Source=tr("source");
			const char *ConditionalAccessId=tr("conditionalAccessId");
			const char *ServiceId=tr("serviceId");
			const char *NetworkId=tr("networkId");
			const char *TransportStreamId=tr("transportStreamId");
			const char *RadioId=tr("radioId");
			int t;
			for (t=0;t<2;t++){
				const char *Caption=tr(tableId[t]);
				wctx_printfn(wctx,"<table id=\"%s\" class=\"level-3 channels\" summary=\"%s\">\n",0,1,tableId[t],Caption);
				wctx_printf0(wctx,"<caption>%s</caption>\n",Caption);
				wctx_printf0(wctx,"<col class=\"number\"/>\n");
				wctx_printf0(wctx,"<col class=\"channel\"/>\n");
				wctx_printf0(wctx,"<col class=\"mux\"/>\n");
				wctx_printfn(wctx,"<thead class=\"level3-top\">\n",0,1);
				wctx_printfn(wctx,"<tr>\n",0,1);
				printList1TH(wctx,"channels.kl1",SF_CH_NUMBER,"#");
				printList1TH(wctx,"channels.kl1",SF_NAME,tr("channel"));
				printList1TH(wctx,"channels.kl1",SF_MUX,tr("channelMux"));
				wctx_printfn(wctx,"</tr>\n",-1,0);
				wctx_printfn(wctx,"</thead>\n",-1,0);
				wctx_printfn(wctx,"<tbody class=\"level3\">\n",0,1);
				for (i=0,channel=channels.channel;i<channels.length;i++,channel++) {
					isTv=boolean(channel->vpid>1);
					if (t==0 && !isTv ||t==1 && isTv) continue;
					wctx_printfn(wctx,"<tr class=\"channel\">\n",0,1);
					wctx_printf0(wctx,"<td class=\"number\" >%d</td>\n",channel->channelNum);
					wctx_printf0(wctx,
						"<td class=\"channel\">"
							"<a class=\"channel titleLink\" href=\"#\">%s</a>"
						"</td>\n",channel->channelName);
					wctx_printf0(wctx,"<td class=\"mux\">%s</td>\n",channel->multiplexName);
					wctx_printfn(wctx,"</tr>\n",-1,0);
					wctx_printfn(wctx,"<tr class=\"channelInfo\">\n",0,1);
					wctx_printfn(wctx,"<td class=\"channelInfo\" colspan=\"3\">\n",0,1);
					printChannelControls(wctx,channel,Epg,LiveStream);
					if (!webifConf.noLogos){
						wctx_printf0(wctx,"<img id=\"logo_%s\" class=\"logo\" alt=\"%s\" src=\"/www2/images/logos/%s.png\"/>\n"
							,channel->channelId,channel->channelName,wctxChannelFilename(wctx,channel->channelName,true));
					}
					wctx_printfn(wctx,"<table class=\"channelInfo\" summary=\"\">\n",0,1);
					wctx_printf0(wctx,"<caption>%s</caption>\n",ChannelDetails);
					wctx_printf0(wctx,"<tr><th>Id</th><td>%s</td></tr>\n",channel->channelId);
					wctx_printf0(wctx,"<tr><th>%s</th><td>%d</td></tr>\n",Frequency,channel->frequency);
					wctx_printf0(wctx,"<tr><th>%s</th><td>%s</td></tr>\n",Parameters,channel->parameter);
					wctx_printf0(wctx,"<tr><th>%s</th><td>%d</td></tr>\n",Source,channel->source);
					wctx_printf0(wctx,"<tr><th>%s</th><td>%d</td></tr>\n",ConditionalAccessId,channel->caid);
					wctx_printf0(wctx,"<tr><th>%s</th><td>%d</td></tr>\n",ServiceId,channel->sid);
					wctx_printf0(wctx,"<tr><th>%s</th><td>%d</td></tr>\n",NetworkId,channel->nid);
					wctx_printf0(wctx,"<tr><th>%s</th><td>%d</td></tr>\n",TransportStreamId,channel->tid);
					wctx_printf0(wctx,"<tr><th>%s</th><td>%d</td></tr>\n",RadioId,channel->rid);
					wctx_printfn(wctx,"</table>\n",-1,0);
					wctx_printfn(wctx,"</td>\n",-1,0); //channelInfo
					wctx_printfn(wctx,"</tr>\n",-1,0); //channelInfo
				}
				wctx_printfn(wctx,"</tbody>\n",-1,0);
				wctx_printfn(wctx,"</table>\n",-1,0);
			}
			freeChannelList(&channels);
		}
		wctx_printfn(wctx,"</div>\n",-1,0); //level2
		wctx_printfn(wctx,"</div>\n",-1,0); //level2-div

		finishHtmlPage(wctx);
		closeSvdrpAll();
	}
	freeCtx(wctx);
%>
