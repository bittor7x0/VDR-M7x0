--- uClibc.orig/Rules.mak	2008-08-30 09:10:31.000000000 +0200
+++ uClibc/Rules.mak	2008-08-30 23:16:13.000000000 +0200
@@ -267,18 +267,18 @@
 
 # Flags in OPTIMIZATION are used only for non-debug builds
 
-OPTIMIZATION:=
+OPTIMIZATION:= -Ofast
 OPTIMIZATION-$(GCC_MAJOR_VER):=
 OPTIMIZATION-$(GCC_MAJOR_VER).$(GCC_MINOR_VER):=
 
 # Use '-Os' optimization if available, else use -O2, allow Config to override
-$(eval $(call check-gcc-var,-Os))
-ifneq ($(CFLAG_-Os),)
-OPTIMIZATION += $(CFLAG_-Os)
-else
-$(eval $(call check-gcc-var,-O2))
-OPTIMIZATION += $(CFLAG_-O2)
-endif
+#$(eval $(call check-gcc-var,-Os))
+#ifneq ($(CFLAG_-Os),)
+#OPTIMIZATION += $(CFLAG_-Os)
+#else
+#$(eval $(call check-gcc-var,-O2))
+#OPTIMIZATION += $(CFLAG_-O2)
+#endif
 # Use the gcc 3.4 -funit-at-a-time optimization when available
 $(eval $(call check-gcc-var,-funit-at-a-time))
 OPTIMIZATION-3.4 += $(CFLAG_-funit-at-a-time)
@@ -400,7 +400,15 @@
 ifeq ($(TARGET_ARCH),mips)
 	OPTIMIZATION+=-mno-split-addresses
 	CPU_CFLAGS-$(CONFIG_MIPS_ISA_1)+=-mips1
-	CPU_CFLAGS-$(CONFIG_MIPS_ISA_2)+=-mips2 -mtune=mips2
+	CPU_CFLAGS-$(CONFIG_MIPS_ISA_2)+=-march=mips2 -mtune=vr4120 -mfix-vr4120
+	CPU_CFLAGS-y  += $(call check_gcc,-ffunction-sections -fdata-sections,)
+	CPU_LDFLAGS-y += -Wl,-O1
+$(eval $(call check-ld-var,--sort-common))
+	CPU_LDFLAGS-y += $(CFLAG_-Wl--sort-common)
+$(eval $(call check-ld-var,--sort-section=alignment))
+	CPU_LDFLAGS-y += $(CFLAG_-Wl--sort-section=alignment)
+$(eval $(call check-ld-var,--gc-sections))
+	CPU_LDFLAGS-y += $(CFLAG_-Wl--gc-sections)
 	CPU_CFLAGS-$(CONFIG_MIPS_ISA_3)+=-mips3 -mtune=mips3
 	CPU_CFLAGS-$(CONFIG_MIPS_ISA_4)+=-mips4 -mtune=mips4
 	CPU_CFLAGS-$(CONFIG_MIPS_ISA_MIPS32)+=-mips32 -mtune=mips32
