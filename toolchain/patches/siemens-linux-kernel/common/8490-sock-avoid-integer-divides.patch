From 0f632c2638b9a0cf388aedbafa71ffa6ce7fea48 Mon Sep 17 00:00:00 2001
From: lly <lly@sf.net>
Date: Sun, 26 Sep 2010 12:36:17 -0400
Subject: [PATCH] [SOCK]: Backport of 2.6 "Avoid integer divides where not
 necessary..." backport from 2.6 (corresponding local commit
 5737bc0d8b685f0139daa88f548637d3dc45c592)

---

diff --git a/include/net/sock.h b/include/net/sock.h
index 11eb129e5e..bde6c788f8 100644
--- a/include/net/sock.h
+++ b/include/net/sock.h
@@ -1406,7 +1406,7 @@ static inline void sk_wake_async(struct sock *sk, int how, int band)
  */
 static inline int sock_writeable(struct sock *sk) 
 {
-	return atomic_read(&sk->wmem_alloc) < (sk->sndbuf / 2);
+	return atomic_read(&sk->wmem_alloc) < (sk->sndbuf >> 1);
 }
 
 static inline int gfp_any(void)
diff --git a/include/net/tcp.h b/include/net/tcp.h
index 3f84ca5898..018a6f85bf 100644
--- a/include/net/tcp.h
+++ b/include/net/tcp.h
@@ -1107,7 +1107,7 @@ struct tcp_skb_cb {
  */
 static inline int tcp_min_write_space(struct sock *sk)
 {
-	return sk->wmem_queued/2;
+	return sk->wmem_queued >> 1;
 }
  
 static inline int tcp_wspace(struct sock *sk)
@@ -1879,7 +1880,7 @@ static inline void tcp_enter_memory_pressure(void)
 static inline void tcp_moderate_sndbuf(struct sock *sk)
 {
 	if (!(sk->userlocks&SOCK_SNDBUF_LOCK)) {
-		sk->sndbuf = min(sk->sndbuf, sk->wmem_queued/2);
+		sk->sndbuf = min(sk->sndbuf, sk->wmem_queued >> 1);
 		sk->sndbuf = max(sk->sndbuf, SOCK_MIN_SNDBUF);
 	}
 }
-- 
2.11.4.GIT

