From: Dmitry Bogatov <KAction@debian.org>
Date: Fri, 26 Jul 2019 07:23:35 +0000
Subject: Add regression test for forced-rescan feature

---
 runit-2.1.2/src/Makefile        |  1 +
 runit-2.1.2/src/t/runtest.sh    | 41 +++++++++++++++++++++++++++++++++++++++++
 runit-2.1.2/src/t/timestamp/run |  3 +++
 3 files changed, 45 insertions(+)
 create mode 100755 runit-2.1.2/src/t/runtest.sh
 create mode 100755 runit-2.1.2/src/t/timestamp/run

diff --git a/src/Makefile b/src/Makefile
index 28db6fd..07cbff7 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -4,6 +4,7 @@ default: sysdeps $(IT)
 
 check: $(IT)
 	./check-local $(IT)
+	cd t && runsvdir=../runsvdir ./runtest.sh
 
 runit: load runit.o unix.a byte.a
 	./load runit unix.a byte.a
diff --git a/src/t/runtest.sh b/src/t/runtest.sh
new file mode 100755
index 0000000..c9fc5b3
--- /dev/null
+++ b/src/t/runtest.sh
@@ -0,0 +1,41 @@
+#!/bin/bash
+set -eu
+
+: "${runsvdir:=runsvdir}"
+
+rm -rf timestamp/supervise/ service/
+rm -f ./timestamp.txt
+
+mkdir service
+
+"${runsvdir}" ./service &
+echo "pid = $!"
+# Wait till runsvdir scans directory and concludes it is empty
+sleep 1 
+now=$(date +%s)
+echo "now = ${now}"
+ln -sf ../timestamp service/
+kill -ALRM $!
+sleep 0.5
+kill -0 $!
+
+# Wait until runsvdir discovers "service/timestamp" symbolic link
+# and executes "service/timestamp/run" script, which would create
+# "./timestamp" file.
+
+while ! test -f ./timestamp.txt ; do
+    sleep 0.01
+done
+
+new=$(cat timestamp.txt)
+echo "new = ${new}"
+kill -HUP $!
+
+if [[ $((new - now)) -lt 2 ]] ; then
+    echo "fine. forced-rescan seems to work"
+    exit 0
+else
+    echo "bad. forced-rescan took too long"
+    exit 1
+fi
+    
diff --git a/src/t/timestamp/run b/src/t/timestamp/run
new file mode 100755
index 0000000..4c13d68
--- /dev/null
+++ b/src/t/timestamp/run
@@ -0,0 +1,3 @@
+#!/bin/sh
+date +%s > ../timestamp.txt
+sv down .
