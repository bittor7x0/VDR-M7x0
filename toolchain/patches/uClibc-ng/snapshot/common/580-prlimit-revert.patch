Our kernel 2.4.21 doesn't support prlimit syscalls, so we revert these commits:
   http://cgit.uclibc-ng.org/cgi/cgit/uclibc-ng.git/commit/?id=ae1144b1562e7675e9e97529bba7eb168d2f0500
	add prlimit syscall wrapper

   http://cgit.uclibc-ng.org/cgi/cgit/uclibc-ng.git/commit/?id=a8cfe4f4e4f0a2d621c2ee2696e18d2b4121db9f
	add prlimit syscall wrapper, now for real

   http://cgit.uclibc-ng.org/cgi/cgit/uclibc-ng.git/commit/?id=118e211269fb4f685f2999157eb4aafc8fdd9423
	guard prlimit, reported by Lance Fredrickson

diff -Naur a/include/sys/resource.h b/include/sys/resource.h
--- a/include/sys/resource.h	2022-04-13 14:17:48.000000000 +0200
+++ b/include/sys/resource.h	2022-05-18 10:20:54.323793937 +0200
@@ -101,13 +101,6 @@
      __THROW;
 libc_hidden_proto(setpriority)
 
-#ifdef __USE_GNU
-/* Modify and return resource limits of a process atomically.  */
-extern int prlimit (__pid_t __pid, enum __rlimit_resource __resource,
-		      const struct rlimit *__new_limit,
-		      struct rlimit *__old_limit) __THROW;
-#endif
-
 __END_DECLS
 
 #endif	/* sys/resource.h  */
diff -Naur a/libc/sysdeps/linux/common/bits/kernel-features.h b/libc/sysdeps/linux/common/bits/kernel-features.h
--- a/libc/sysdeps/linux/common/bits/kernel-features.h	2022-04-13 14:17:48.000000000 +0200
+++ b/libc/sysdeps/linux/common/bits/kernel-features.h	2022-05-18 10:20:52.111798801 +0200
@@ -490,11 +490,6 @@
 # define __ASSUME_FALLOCATE 1
 #endif
 
-/* prlimit64 is available in 2.6.36.  */
-#if __LINUX_KERNEL_VERSION >= 0x020624
-# define __ASSUME_PRLIMIT64    1
-#endif
-
 /* getcpu is a syscall for x86-64 since 3.1.  */
 #if defined __x86_64__ && __LINUX_KERNEL_VERSION >= 0x030100
 # define __ASSUME_GETCPU_SYSCALL        1
diff -Naur a/libc/sysdeps/linux/common/Makefile.in b/libc/sysdeps/linux/common/Makefile.in
--- a/libc/sysdeps/linux/common/Makefile.in	2022-05-18 10:19:49.000000000 +0200
+++ b/libc/sysdeps/linux/common/Makefile.in	2022-05-18 10:20:54.323793937 +0200
@@ -40,7 +40,6 @@
 	pipe2.c \
 	ppoll.c \
 	prctl.c \
-	prlimit.c \
 	readahead.c \
 	reboot.c \
 	remap_file_pages.c \
diff -Naur a/libc/sysdeps/linux/common/prlimit.c b/libc/sysdeps/linux/common/prlimit.c
--- a/libc/sysdeps/linux/common/prlimit.c	2022-04-13 14:17:48.000000000 +0200
+++ b/libc/sysdeps/linux/common/prlimit.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,30 +0,0 @@
-/* Get/set resource limits.  Linux specific syscall.
-   Copyright (C) 2021-2022 Free Software Foundation, Inc.
-
-   The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Lesser General Public
-   License as published by the Free Software Foundation; either
-   version 2.1 of the License, or (at your option) any later version.
-
-   The GNU C Library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public
-   License along with the GNU C Library; if not, see
-   <https://www.gnu.org/licenses/>.  */
-
-#include <sys/resource.h>
-#include <sysdep.h>
-#include <bits/kernel-features.h>
-
-#if defined __ASSUME_PRLIMIT64
-int
-prlimit (__pid_t pid, enum __rlimit_resource resource,
-	     const struct rlimit *new_rlimit, struct rlimit *old_rlimit)
-{
-  return INLINE_SYSCALL (prlimit64, 4, pid, resource, new_rlimit,
-			      old_rlimit);
-}
-#endif
