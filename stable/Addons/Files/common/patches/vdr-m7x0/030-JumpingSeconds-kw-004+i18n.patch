diff -Naur vdr-m7x0-orig/config.c vdr-m7x0/config.c
--- vdr-m7x0-orig/config.c	2007-04-30 20:16:35.000000000 +0200
+++ vdr-m7x0/config.c	2007-04-30 20:17:56.000000000 +0200
@@ -280,6 +280,9 @@
   ShowRecLength = 1;
   ShowProgressBar = 1;
   MenuCmdPosition = 1;
+  JumpSeconds = 60;
+  JumpSecondsRepeat = 120;
+  JumpFramesRepeat = 15;
 }
 
 cSetup& cSetup::operator= (const cSetup &s)
@@ -446,6 +449,9 @@
   else if (!strcasecmp(Name, "ShowRecLength"))       ShowRecLength      = atoi(Value);
   else if (!strcasecmp(Name, "ShowProgressBar"))     ShowProgressBar    = atoi(Value);
   else if (!strcasecmp(Name, "MenuCmdPosition"))     MenuCmdPosition    = atoi(Value);
+  else if (!strcasecmp(Name, "JumpSeconds"))         JumpSeconds        = atoi(Value);
+  else if (!strcasecmp(Name, "JumpSecondsRepeat"))   JumpSecondsRepeat  = atoi(Value);
+  else if (!strcasecmp(Name, "JumpFramesRepeat"))    JumpFramesRepeat   = atoi(Value);
   else
      return false;
   return true;
@@ -519,6 +525,9 @@
   Store("ShowRecLength",      ShowRecLength);
   Store("ShowProgressBar",    ShowProgressBar);
   Store("MenuCmdPosition",    MenuCmdPosition);
+  Store("JumpSeconds",        JumpSeconds);
+  Store("JumpSecondsRepeat",  JumpSecondsRepeat);
+  Store("JumpFramesRepeat",   JumpFramesRepeat);
 
   Sort();
 
diff -Naur vdr-m7x0-orig/config.h vdr-m7x0/config.h
--- vdr-m7x0-orig/config.h	2007-04-30 20:16:35.000000000 +0200
+++ vdr-m7x0/config.h	2007-04-30 20:46:11.000000000 +0200
@@ -256,6 +256,7 @@
   int InitialChannel;
   int InitialVolume;
   int ShowRecDate, ShowRecTime, ShowRecLength, ShowProgressBar, MenuCmdPosition;
+  int JumpSeconds, JumpSecondsRepeat, JumpFramesRepeat;
   int __EndData__;
   cSetup(void);
   cSetup& operator= (const cSetup &s);
diff -Naur vdr-m7x0-orig/i18n.c vdr-m7x0/i18n.c
--- vdr-m7x0-orig/i18n.c	2007-04-30 20:16:35.000000000 +0200
+++ vdr-m7x0/i18n.c	2007-04-30 20:16:55.000000000 +0200
@@ -6478,6 +6478,72 @@
     "",//TODO
     "",//TODO
   },
+  { "Setup.Replay$Jump Seconds",
+    "Sprungweite in Sekunden",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "Segundos a saltar",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+  },
+  { "Setup.Replay$Jump Seconds (repeated)",
+    "Sprungweite in Sek. (wiederh.)",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "Segundos a saltar (repetición)",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+  },
+  { "Setup.Replay$Jump Frames (repeated)",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "Frames a saltar (repetición)",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+    "",
+  },
   { NULL }
   };
 
diff -Naur vdr-m7x0-orig/menu.c vdr-m7x0/menu.c
--- vdr-m7x0-orig/menu.c	2007-04-30 20:16:35.000000000 +0200
+++ vdr-m7x0/menu.c	2007-04-30 20:48:01.000000000 +0200
@@ -2822,6 +2822,9 @@
   Add(new cMenuEditBoolItem(tr("Setup.Replay$Multi speed mode"), &data.MultiSpeedMode));
   Add(new cMenuEditBoolItem(tr("Setup.Replay$Show replay mode"), &data.ShowReplayMode));
   Add(new cMenuEditIntItem(tr("Setup.Replay$Resume ID"), &data.ResumeID, 0, 99));
+  Add(new cMenuEditIntItem( tr("Setup.Replay$Jump Seconds"), &data.JumpSeconds));
+  Add(new cMenuEditIntItem( tr("Setup.Replay$Jump Seconds (repeated)"), &data.JumpSecondsRepeat));
+  Add(new cMenuEditIntItem( tr("Setup.Replay$Jump Frames (repeated)"), &data.JumpFramesRepeat));
 }
 
 void cMenuSetupReplay::Store(void)
@@ -4385,6 +4388,9 @@
 
 eOSState cReplayControl::ProcessKey(eKeys Key)
 {
+  static int jmpWidth = 1;
+  int pkw = 0;
+
   if (!Active())
      return osEnd;
   if (visible) {
@@ -4422,18 +4428,43 @@
     case kFastFwd:
     case kRight:   Forward(); break;
     case kRed:     TimeSearch(); break;
-    case k1|k_Repeat:
-    case k1:       SkipSeconds(-20); break;
-    case k3|k_Repeat:
-    case k3:       SkipSeconds( 20); break;
-    case kGreen|k_Repeat:
-    case kGreen:   SkipSeconds(-60); break;
-    case kYellow|k_Repeat:
-    case kYellow:  SkipSeconds( 60); break;
+    case kGreen|k_Repeat: 
+                   SkipSeconds(-(Setup.JumpSecondsRepeat)); break;
+    case kGreen:   SkipSeconds(-(Setup.JumpSeconds)); break;
+    case kYellow|k_Repeat: 
+                   SkipSeconds(Setup.JumpSecondsRepeat); break;
+    case kYellow:  SkipSeconds(Setup.JumpSeconds); break;
     case kStop:
     case kBlue:    Hide();
                    Stop();
                    return osEnd;
+//begin kw-Jumpseconds etc.
+     case k1|k_Repeat:
+            jmpWidth += Setup.JumpFramesRepeat;
+                    displayFrames = false;
+                    pkw = SkipFrames(-jmpWidth);
+                    Goto(pkw, true);
+                    break;
+     case k1:
+            jmpWidth = 1;
+                    displayFrames = true;
+                    pkw = SkipFrames(-1);
+                    Goto(pkw, true);
+                    break;
+     case k3|k_Repeat:
+            jmpWidth += Setup.JumpFramesRepeat;
+                    displayFrames = false;
+                    pkw = SkipFrames(jmpWidth);
+                    Goto(pkw, true);
+                    break;
+     case k3:
+            jmpWidth = 1;
+                    displayFrames = true;
+                    pkw = SkipFrames(1);
+                    Goto(pkw, true);
+                    break;
+//begin kw-Jumpseconds etc.
+
     default: {
       DoShowMode = false;
       switch (Key) {
